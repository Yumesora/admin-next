{"version":3,"file":"write-81147ce8-8f602ed.js","sources":["../src/views/manage-pages/write.tsx"],"sourcesContent":["import SlidersH from '@vicons/fa/es/SlidersH'\nimport TelegramPlane from '@vicons/fa/es/TelegramPlane'\nimport { Icon } from '@vicons/utils'\nimport { HeaderActionButton } from 'components/button/rounded-button'\nimport { EditorToggleWrapper } from 'components/editor'\nimport { MaterialInput } from 'components/input/material-input'\nimport { UnderlineInput } from 'components/input/underline-input'\nimport { ParseContentButton } from 'components/logic/parse-button'\nimport { BASE_URL } from 'constants/env'\nimport { useParsePayloadIntoData } from 'hooks/use-parse-payload'\nimport { ContentLayout } from 'layouts/content'\nimport { isString } from 'lodash-es'\nimport { PageModel } from 'models/page'\nimport {\n  NDrawer,\n  NDrawerContent,\n  NForm,\n  NFormItem,\n  NInputNumber,\n  useMessage,\n} from 'naive-ui'\nimport { RouteName } from 'router/name'\nimport { RESTManager } from 'utils/rest'\nimport { computed, defineComponent, onMounted, reactive, ref, toRaw } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\ntype PageReactiveType = {\n  title: string\n  text: string\n  subtitle: string\n  slug: string\n  order: number\n}\n\nconst PageWriteView = defineComponent(() => {\n  const route = useRoute()\n\n  const resetReactive: () => PageReactiveType = () => ({\n    text: '',\n    title: '',\n    order: 0,\n    slug: '',\n    subtitle: '',\n  })\n\n  const parsePayloadIntoReactiveData = (payload: PageModel) =>\n    useParsePayloadIntoData(data)(payload)\n  const data = reactive<PageReactiveType>(resetReactive())\n  const id = computed(() => route.query.id)\n\n  onMounted(async () => {\n    const $id = id.value\n    if ($id && typeof $id == 'string') {\n      const payload = (await RESTManager.api.pages($id).get({})) as any\n\n      const data = payload.data\n      parsePayloadIntoReactiveData(data as PageModel)\n    }\n  })\n\n  const drawerShow = ref(false)\n\n  const message = useMessage()\n  const router = useRouter()\n\n  const handleSubmit = async () => {\n    const parseDataToPayload = (): { [key in keyof PageModel]?: any } => {\n      try {\n        if (!data.title || data.title.trim().length == 0) {\n          throw '标题为空'\n        }\n        if (!data.slug) {\n          throw '路径为空'\n        }\n        return {\n          ...toRaw(data),\n          title: data.title.trim(),\n          slug: data.slug.trim(),\n        }\n      } catch (e) {\n        message.error(e as any)\n\n        throw e\n      }\n    }\n    if (id.value) {\n      // update\n      if (!isString(id.value)) {\n        return\n      }\n      const $id = id.value as string\n      await RESTManager.api.pages($id).put({\n        data: parseDataToPayload(),\n      })\n      message.success('修改成功')\n    } else {\n      // create\n      await RESTManager.api.pages.post({\n        data: parseDataToPayload(),\n      })\n      message.success('发布成功')\n    }\n\n    router.push({ name: RouteName.ListPage, hash: '|publish' })\n  }\n\n  return () => (\n    <ContentLayout\n      actionsElement={\n        <>\n          <ParseContentButton data={data} />\n\n          <HeaderActionButton\n            icon={<TelegramPlane />}\n            onClick={handleSubmit}\n          ></HeaderActionButton>\n        </>\n      }\n      footerButtonElement={\n        <>\n          <button\n            onClick={() => {\n              drawerShow.value = true\n            }}\n          >\n            <Icon>\n              <SlidersH />\n            </Icon>\n          </button>\n        </>\n      }\n    >\n      <MaterialInput\n        class=\"mt-3 relative z-10\"\n        label={'与你有个好心情~'}\n        value={data.title}\n        onChange={(e) => {\n          data.title = e\n        }}\n      ></MaterialInput>\n\n      <div class={'text-gray-500 py-3'}>\n        <label>{`${BASE_URL}/`}</label>\n        <UnderlineInput\n          value={data.slug}\n          onChange={(e) => void (data.slug = e)}\n        ></UnderlineInput>\n      </div>\n\n      <EditorToggleWrapper\n        loading={!!(id.value && !data.title)}\n        onChange={(v) => {\n          data.text = v\n        }}\n        text={data.text}\n      />\n\n      {/* Drawer  */}\n\n      <NDrawer\n        show={drawerShow.value}\n        width={450}\n        style={{ maxWidth: '90vw' }}\n        placement=\"right\"\n        onUpdateShow={(s) => {\n          drawerShow.value = s\n        }}\n      >\n        <NDrawerContent title=\"文章设定\">\n          <NForm>\n            <NFormItem label=\"页面顺序\">\n              <NInputNumber\n                placeholder=\"\"\n                value={data.order}\n                onChange={(e) => void (data.order = e ?? 0)}\n              ></NInputNumber>\n            </NFormItem>\n          </NForm>\n        </NDrawerContent>\n      </NDrawer>\n      {/* Drawer END */}\n    </ContentLayout>\n  )\n})\n\nexport default PageWriteView\n"],"names":["PageWriteView","defineComponent","route","useRoute","data","reactive","text","title","order","slug","subtitle","id","computed","query","async","$id","value","payload","useParsePayloadIntoData","RESTManager","api","pages","get","drawerShow","ref","message","useMessage","router","useRouter","handleSubmit","parseDataToPayload","trim","length","toRaw","e","error","isString","put","success","post","push","name","RouteName","ListPage","hash","ContentLayout","actionsElement","ParseContentButton","HeaderActionButton","icon","TelegramPlane","onClick","footerButtonElement","Icon","SlidersH","MaterialInput","class","label","onChange","BASE_URL","UnderlineInput","EditorToggleWrapper","loading","v","NDrawer","show","width","style","maxWidth","placement","onUpdateShow","s","NDrawerContent","NForm","NFormItem","NInputNumber","placeholder"],"mappings":"ioBAiCMA,EAAgBC,GAAgB,WAC9BC,EAAQC,IAYRC,EAAOC,GATXC,KAAM,GACNC,MAAO,GACPC,MAAO,EACPC,KAAM,GACNC,SAAU,KAMNC,EAAKC,GAAS,IAAMV,EAAMW,MAAMF,QAE5BG,gBACFC,EAAMJ,EAAGK,SACXD,GAAqB,iBAAPA,EAAiB,CAPA,CAACE,IACpCC,EAAwBd,EAAxBc,CAA8BD,YAOLE,EAAYC,IAAIC,MAAMN,GAAKO,IAAI,KAEjClB,gBAKnBmB,EAAaC,GAAI,GAEjBC,EAAUC,IACVC,EAASC,IAETC,EAAef,gBACbgB,EAAqB,aAElB1B,EAAKG,OAAqC,GAA5BH,EAAKG,MAAMwB,OAAOC,YAC7B,WAEH5B,EAAKK,UACF,aAED,IACFwB,EAAM7B,GACTG,MAAOH,EAAKG,MAAMwB,OAClBtB,KAAML,EAAKK,KAAKsB,cAEXG,WACCC,MAAMD,GAERA,OAGNvB,EAAGK,MAAO,KAEPoB,EAASzB,EAAGK,oBAGXD,EAAMJ,EAAGK,YACTG,EAAYC,IAAIC,MAAMN,GAAKsB,IAAI,CACnCjC,KAAM0B,QAEAQ,QAAQ,mBAGVnB,EAAYC,IAAIC,MAAMkB,KAAK,CAC/BnC,KAAM0B,QAEAQ,QAAQ,UAGXE,KAAK,CAAEC,KAAMC,EAAUC,SAAUC,KAAM,oBAGzC,MACJC,EAAD,CACEC,0BAEKC,EAAD,CAAoB3C,KAAAA,MAEnB4C,EAAD,CACEC,OAAOC,EAAD,MACNC,QAAStB,KAIfuB,+BAEK,SAAD,CACED,QAAS,OACInC,OAAQ,MAGpBqC,EAAD,OACGC,EAAD,YAMPC,EAAD,CACEC,MAAM,qBACNC,MAAO,WACPzC,MAAOZ,EAAKG,MACZmD,SAAWxB,MACJ3B,MAAQ2B,OAIhB,MAAD,CAAKsB,MAAO,wBACT,QAAD,KAAQ,GAAGG,QACVC,EAAD,CACE5C,MAAOZ,EAAKK,KACZiD,SAAWxB,MAAiBzB,KAAOyB,QAItC2B,EAAD,CACEC,aAAe9C,OAAUZ,EAAKG,OAC9BmD,SAAWK,MACJzD,KAAOyD,GAEdzD,KAAMF,EAAKE,SAKZ0D,EAAD,CACEC,KAAM1C,EAAWP,MACjBkD,MAAO,IACPC,MAAO,CAAEC,SAAU,QACnBC,UAAU,QACVC,aAAeC,MACFvD,MAAQuD,MAGpBC,EAAD,CAAgBjE,MAAM,UACnBkE,EAAD,OACGC,EAAD,CAAWjB,MAAM,UACdkB,EAAD,CACEC,YAAY,GACZ5D,MAAOZ,EAAKI,MACZkD,SAAWxB,MAAiB1B,YAAQ0B,IAAK"}