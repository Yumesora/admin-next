{"version":3,"file":"index-180a5ffc-50ab21a.js","sources":["../src/utils/index.ts"],"sourcesContent":["import { isEqual, isObject, transform } from 'lodash-es'\nimport { toRaw } from 'vue'\n\nexport * from './auth'\nexport * from './build-menus'\nexport * from './case'\nexport * from './rest'\nexport * from './time'\n\n/**\n * diff 两层, Object 浅层比较, 引用不一致返回整个不一样的 Object\n * @param origin\n * @param newObject\n * @returns\n */\nexport const shallowDiff = <T extends KV>(\n  origin: T,\n  newObject: T,\n): Partial<T> => {\n  const diff = {} as Partial<T>\n\n  for (const key in newObject) {\n    if (isObject(newObject[key])) {\n      const insideObject = newObject[key]\n      const originInsideObject = origin[key]\n      // shallow compare, 2 层\n      Object.keys(toRaw(insideObject)).map((key$) => {\n        if (isObject(insideObject[key$])) {\n          const insideObject$ = insideObject[key$]\n          for (const k in insideObject$) {\n            if (insideObject$[k] !== originInsideObject[key$][k]) {\n              diff[key] = insideObject\n\n              break\n            }\n          }\n        } else if (insideObject[key$] !== originInsideObject[key$]) {\n          diff[key] = insideObject\n        }\n      })\n    } else {\n      if (newObject[key] !== origin[key]) {\n        diff[key] = newObject[key]\n      }\n    }\n  }\n\n  return diff\n}\n\n/**\n * 深层 diff, 返回不一致的 KV\n * @param base\n * @param object\n * @returns\n */\nexport function deepDiff<T extends KV>(base: T, object: T): Partial<T> {\n  function changes(object: any, base: any) {\n    return transform(object, function (result: any, value, key) {\n      if (!isEqual(value, base[key])) {\n        result[key] =\n          isObject(value) && isObject(base[key])\n            ? changes(value, base[key])\n            : value\n      }\n    })\n  }\n  return changes(object, base)\n}\n\nexport function responseBlobToFile(response: any, filename: string): void {\n  const url = window.URL.createObjectURL(new Blob([response as any]))\n  const link = document.createElement('a')\n  link.href = url\n  link.setAttribute('download', filename)\n  document.body.appendChild(link)\n  link.click()\n}\n\nexport function toPascalCase(string: string) {\n  return `${string}`\n    .replace(new RegExp(/[-_]+/, 'g'), ' ')\n    .replace(new RegExp(/[^\\w\\s]/, 'g'), '')\n    .replace(\n      new RegExp(/\\s+(.)(\\w*)/, 'g'),\n      ($1, $2, $3) => `${$2.toUpperCase() + $3.toLowerCase()}`,\n    )\n    .replace(new RegExp(/\\w/), (s) => s.toUpperCase())\n}\n"],"names":["shallowDiff","origin","newObject","diff","key","isObject","insideObject","originInsideObject","keys","toRaw","map","key$","insideObject$","k","base","object","object2","base2","transform","result","value","isEqual","changes","response","filename","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","string","replace","RegExp","$1","$2","$3","toUpperCase","toLowerCase","s"],"mappings":"2GAeaA,EAAc,CACzBC,EACAC,WAEMC,EAAO,aAEFC,KAAOF,KACZG,EAASH,EAAUE,IAAO,OACtBE,EAAeJ,EAAUE,GACzBG,EAAqBN,EAAOG,UAE3BI,KAAKC,EAAMH,IAAeI,KAAKC,OAChCN,EAASC,EAAaK,IAAQ,OAC1BC,EAAgBN,EAAaK,aACxBE,KAAKD,KACVA,EAAcC,KAAON,EAAmBI,GAAME,GAAI,GAC/CT,GAAOE,cAKPA,EAAaK,KAAUJ,EAAmBI,OAC9CP,GAAOE,WAIZJ,EAAUE,KAASH,EAAOG,OACvBA,GAAOF,EAAUE,WAKrBD,cAS8BW,EAASC,qBAC7BC,EAAaC,UACrBC,EAAUF,GAAQ,SAAUG,EAAaC,EAAOhB,GAChDiB,EAAQD,EAAOH,EAAKb,QAChBA,GACLC,EAASe,IAAUf,EAASY,EAAKb,IAC7BkB,EAAQF,EAAOH,EAAKb,IACpBgB,MAILE,CAAQP,EAAQD,cAGUS,EAAeC,SAC1CC,EAAMC,OAAOC,IAAIC,gBAAgB,IAAIC,KAAK,CAACN,KAC3CO,EAAOC,SAASC,cAAc,OAC/BC,KAAOR,IACPS,aAAa,WAAYV,YACrBW,KAAKC,YAAYN,KACrBO,mBAGsBC,SACpB,GAAGA,IACPC,QAAQ,IAAIC,OAAO,QAAS,KAAM,KAClCD,QAAQ,IAAIC,OAAO,UAAW,KAAM,IACpCD,QACC,IAAIC,OAAO,cAAe,MAC1B,CAACC,EAAIC,EAAIC,IAAO,GAAGD,EAAGE,cAAgBD,EAAGE,kBAE1CN,QAAQ,IAAIC,OAAO,OAAQM,GAAMA,EAAEF"}