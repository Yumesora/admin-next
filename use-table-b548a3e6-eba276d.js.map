{"version":3,"file":"use-table-b548a3e6-eba276d.js","sources":["../src/hooks/use-table.ts"],"sourcesContent":["import { PostModel } from 'models/post'\nimport { Pager } from 'models/base'\nimport { RowKey } from 'naive-ui/lib/data-table/src/interface'\nimport { ref, reactive, Ref } from 'vue'\nimport { LocationQueryValue } from 'vue-router'\n\nexport type fetchDataFn = (\n  page?: string | number | LocationQueryValue[],\n  size?: number,\n) => Promise<void>\nexport const useTable = <T = any>(\n  fetchDataFn: (data: Ref<T[]>, pager: Ref<Pager>) => fetchDataFn,\n) => {\n  const data: Ref<T[]> = ref<T[]>([]) as any\n  const pager = ref<Pager>({} as any)\n  const sortProps = reactive({\n    sortBy: '',\n    sortOrder: 0,\n  })\n  const checkedRowKeys = ref<string[]>([])\n  const loading = ref(false)\n  return {\n    data,\n    pager,\n    sortProps,\n    checkedRowKeys,\n    loading,\n    fetchDataFn: async (page?: number, size?: number) => {\n      loading.value = true\n      await fetchDataFn(data, pager)(page, size)\n      loading.value = false\n    },\n  }\n}\n"],"names":["useTable","fetchDataFn","data","ref","pager","sortProps","reactive","sortBy","sortOrder","checkedRowKeys","loading","async","page","size","value"],"mappings":"+DAUaA,EACXC,UAEMC,EAAiBC,EAAS,IAC1BC,EAAQD,EAAW,IACnBE,EAAYC,EAAS,CACzBC,OAAQ,GACRC,UAAW,IAEPC,EAAiBN,EAAc,IAC/BO,EAAUP,GAAI,SACb,CACLD,KAAAA,EACAE,MAAAA,EACAC,UAAAA,EACAI,eAAAA,EACAC,QAAAA,EACAT,YAAaU,MAAOC,EAAeC,OACzBC,OAAQ,QACVb,EAAYC,EAAME,EAAlBH,CAAyBW,EAAMC,KAC7BC,OAAQ"}