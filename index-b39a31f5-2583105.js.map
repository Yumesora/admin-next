{"version":3,"file":"index-b39a31f5-2583105.js","sources":["../node_modules/.pnpm/@vicons+antd@0.11.0/node_modules/@vicons/antd/CheckCircleOutlined.js","../src/views/setting/tabs/system.tsx","../src/views/setting/tabs/security.tsx","../src/views/setting/tabs/user.tsx","../src/views/setting/index.tsx"],"sourcesContent":["'use strict'\nObject.defineProperty(exports, '__esModule', { value: true })\nconst vue_1 = require('vue')\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 1024 1024'\n}\nconst _hoisted_2 = /*#__PURE__*/ vue_1.createVNode(\n  'path',\n  {\n    d: 'M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0 0 51.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z',\n    fill: 'currentColor'\n  },\n  null,\n  -1\n  /* HOISTED */\n)\nconst _hoisted_3 = /*#__PURE__*/ vue_1.createVNode(\n  'path',\n  {\n    d: 'M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448s448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372s372 166.6 372 372s-166.6 372-372 372z',\n    fill: 'currentColor'\n  },\n  null,\n  -1\n  /* HOISTED */\n)\nexports.default = vue_1.defineComponent({\n  name: 'CheckCircleOutlined',\n  render: function render(_ctx, _cache) {\n    return vue_1.openBlock(), vue_1.createBlock('svg', _hoisted_1, [_hoisted_2, _hoisted_3])\n  }\n})\n","import CheckCircleOutlined from '@vicons/antd/CheckCircleOutlined'\nimport { HeaderActionButton } from 'components/button/rounded-button'\nimport { useInjector } from 'hooks/use-deps-injection'\nimport { useLayout } from 'layouts/content'\nimport { cloneDeep, isEmpty, merge, omit } from 'lodash-es'\nimport { IConfig } from 'models/setting'\nimport {\n  NCollapse,\n  NCollapseItem,\n  NDynamicTags,\n  NForm,\n  NFormItem,\n  NFormItemGi,\n  NGrid,\n  NInput,\n  NInputNumber,\n  NSpace,\n  NSwitch,\n  NText,\n} from 'naive-ui'\nimport { UIStore } from 'stores/ui'\nimport { deepDiff, RESTManager } from 'utils'\nimport {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  reactive,\n  ref,\n  toRaw,\n  watch,\n} from 'vue'\n\nconst NFormPrefixCls = 'mt-6'\nconst NFormBaseProps = {\n  class: NFormPrefixCls,\n  labelPlacement: 'left',\n  labelAlign: 'right',\n  labelWidth: 150,\n  autocomplete: 'chrome-off',\n}\n\nexport const autosizeableProps = {\n  autosize: true,\n  clearable: true,\n  style: 'min-width: 300px; max-width: 100%',\n} as const\nexport const TabSystem = defineComponent(() => {\n  const { setHeaderButton } = useLayout()\n\n  onMounted(() => {\n    setHeaderButton(\n      <HeaderActionButton\n        disabled={true}\n        onClick={save}\n        icon={<CheckCircleOutlined />}\n      ></HeaderActionButton>,\n    )\n  })\n\n  onUnmounted(() => {\n    setHeaderButton(null)\n  })\n\n  let originConfigs: IConfig = {} as IConfig\n  const configs = ref(mergeFullConfigs({}))\n  const diff = ref({} as Partial<IConfig>)\n\n  watch(\n    () => configs.value,\n    (n) => {\n      diff.value = deepDiff(originConfigs, toRaw(n))\n    },\n    { deep: true },\n  )\n  watch(\n    () => diff.value,\n    (n) => {\n      let canSave = false\n      if (isEmpty(n)) {\n        canSave = false\n      } else {\n        canSave = true\n      }\n      setHeaderButton(\n        <HeaderActionButton\n          disabled={!canSave}\n          icon={<CheckCircleOutlined />}\n          onClick={save}\n        ></HeaderActionButton>,\n      )\n    },\n  )\n\n  async function save() {\n    if (isEmpty(diff.value)) {\n      return\n    }\n\n    const entries = Object.entries(diff.value) as [keyof IConfig, any][]\n\n    for await (const [key, value] of entries) {\n      const val = Object.fromEntries(\n        Object.entries(value).map(([k, v]) => {\n          if (Array.isArray(v)) {\n            return [k, configs.value[key][k]]\n          }\n          return [k, v]\n        }),\n      )\n\n      await RESTManager.api.options(key).patch({\n        data: val,\n      })\n    }\n\n    await fetchConfig()\n    message.success('修改成功')\n  }\n\n  const fetchConfig = async () => {\n    let response = (await RESTManager.api.options.get()) as any\n    response = mergeFullConfigs(omit(response, ['ok'])) as IConfig\n\n    originConfigs = cloneDeep(response)\n\n    configs.value = response\n  }\n\n  onMounted(() => {\n    fetchConfig()\n  })\n\n  const expandedNames = ref<string[]>(['website'])\n  const uiStore = useInjector(UIStore)\n  const gridCols = computed(() => (uiStore.viewport.value.mobile ? 1 : 2))\n  const formProps = reactive(NFormBaseProps) as any\n\n  watch(\n    () => uiStore.viewport.value.mobile,\n    (n) => {\n      if (n) {\n        formProps.labelPlacement = 'top'\n        formProps.labelAlign = 'left'\n      } else {\n        formProps.labelPlacement = 'left'\n        formProps.labelAlign = 'right'\n      }\n    },\n    { immediate: true },\n  )\n  return () => (\n    <Fragment>\n      <div class=\"pt-4\"></div>\n\n      <NCollapse\n        accordion\n        displayDirective=\"if\"\n        expandedNames={expandedNames.value}\n        onUpdateExpandedNames={(e) => {\n          expandedNames.value = e\n        }}\n      >\n        <NCollapseItem title=\"网站设置\" name=\"website\">\n          <NForm {...formProps}>\n            <NGrid cols={gridCols.value} xGap={12}>\n              <NFormItemGi span={1} label=\"前端地址\">\n                <NInput\n                  value={configs.value.url.webUrl}\n                  onInput={(e) => void (configs.value.url.webUrl = e)}\n                ></NInput>\n              </NFormItemGi>\n\n              <NFormItemGi span={1} label=\"API 地址\">\n                <NInput\n                  value={configs.value.url.serverUrl}\n                  onInput={(e) => void (configs.value.url.serverUrl = e)}\n                ></NInput>\n              </NFormItemGi>\n\n              <NFormItemGi span={1} label=\"后台地址\">\n                <NInput\n                  value={configs.value.url.adminUrl}\n                  onInput={(e) => void (configs.value.url.adminUrl = e)}\n                ></NInput>\n              </NFormItemGi>\n\n              <NFormItemGi span={1} label=\"Gateway 地址\">\n                <NInput\n                  value={configs.value.url.wsUrl}\n                  onInput={(e) => void (configs.value.url.wsUrl = e)}\n                ></NInput>\n              </NFormItemGi>\n            </NGrid>\n          </NForm>\n        </NCollapseItem>\n        <NCollapseItem title=\"SEO 优化\" name=\"seo\">\n          <NForm {...formProps}>\n            <NFormItem label=\"网站标题\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.seo.title}\n                onInput={(e) => void (configs.value.seo.title = e)}\n              ></NInput>\n            </NFormItem>\n\n            <NFormItem label=\"网站描述\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.seo.description}\n                onInput={(e) => void (configs.value.seo.description = e)}\n              ></NInput>\n            </NFormItem>\n\n            <NFormItem label=\"关键字\">\n              <NDynamicTags\n                round\n                type=\"primary\"\n                value={configs.value.seo.keywords}\n                onChange={(e) => void (configs.value.seo.keywords = e)}\n              ></NDynamicTags>\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem title=\"后台附加设置\" name=\"adminExtra\">\n          <NForm {...formProps}>\n            <NFormItem label=\"开启后台管理反代\">\n              <NSwitch\n                value={configs.value.adminExtra.enableAdminProxy}\n                onUpdateValue={(e) =>\n                  void (configs.value.adminExtra.enableAdminProxy = e)\n                }\n              />\n            </NFormItem>\n            <NFormItem label=\"中后台标题\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.adminExtra.title}\n                onUpdateValue={(e) => void (configs.value.adminExtra.title = e)}\n              ></NInput>\n            </NFormItem>\n\n            <NFormItem label=\"登录页面背景\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.adminExtra.background}\n                inputProps={{ autocomplete: 'off' }}\n                onUpdateValue={(e) =>\n                  void (configs.value.adminExtra.background = e)\n                }\n              ></NInput>\n            </NFormItem>\n\n            <NFormItem label=\"高德查询 API Key\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.adminExtra.gaodemapKey}\n                type={'password'}\n                showPasswordToggle\n                clearable\n                inputProps={{ autocomplete: 'off' }}\n                onUpdateValue={(e) => {\n                  configs.value.adminExtra.gaodemapKey = e\n                }}\n              />\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem title=\"评论设置\" name=\"comment\">\n          <NForm {...formProps}>\n            <NFormItem label=\"反垃圾评论\">\n              <NSwitch\n                value={configs.value.commentOptions.antiSpam}\n                onUpdateValue={(e) =>\n                  void (configs.value.commentOptions.antiSpam = e)\n                }\n              ></NSwitch>\n            </NFormItem>\n\n            <NFormItem label=\"自定义屏蔽关键词\">\n              <NDynamicTags\n                disabled={!configs.value.commentOptions.antiSpam}\n                value={configs.value.commentOptions.spamKeywords}\n                onUpdateValue={(e) =>\n                  void (configs.value.commentOptions.spamKeywords = e)\n                }\n                type=\"primary\"\n              ></NDynamicTags>\n            </NFormItem>\n\n            <NFormItem label=\"自定义屏蔽 IP\">\n              <NDynamicTags\n                disabled={!configs.value.commentOptions.antiSpam}\n                value={configs.value.commentOptions.blockIps}\n                onUpdateValue={(e) =>\n                  void (configs.value.commentOptions.blockIps = e)\n                }\n                type=\"primary\"\n              ></NDynamicTags>\n            </NFormItem>\n\n            <NFormItem label=\"禁止非中文评论\">\n              <NSwitch\n                value={configs.value.commentOptions.disableNoChinese}\n                onUpdateValue={(e) =>\n                  void (configs.value.commentOptions.disableNoChinese = e)\n                }\n              />\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem title=\"邮件通知设置\" name=\"mail\">\n          <NForm {...formProps}>\n            <NFormItem label=\"开启评论邮箱提醒\">\n              <NSwitch\n                value={configs.value.mailOptions.enable}\n                onUpdateValue={(e) =>\n                  void (configs.value.mailOptions.enable = e)\n                }\n              />\n            </NFormItem>\n            <NGrid cols={gridCols.value} xGap={12}>\n              <NFormItemGi span={1} label=\"发件邮箱 host\">\n                <NInput\n                  value={configs.value.mailOptions.options?.host || ''}\n                  onInput={(e) => {\n                    if (!configs.value.mailOptions.options) {\n                      // @ts-ignore\n                      configs.value.mailOptions.options = {}\n                    }\n                    configs.value.mailOptions.options!.host = e\n                  }}\n                />\n              </NFormItemGi>\n              <NFormItemGi span={1} label=\"发件邮箱端口\">\n                <NInputNumber\n                  value={configs.value.mailOptions.options?.port || 465}\n                  onChange={(e) => {\n                    if (!configs.value.mailOptions.options) {\n                      // @ts-ignore\n                      configs.value.mailOptions.options = {}\n                    }\n                    configs.value.mailOptions.options!.port = e ?? 465\n                  }}\n                />\n              </NFormItemGi>\n              <NFormItemGi span={1} label=\"发件邮箱地址\">\n                <NInput\n                  value={configs.value.mailOptions.user}\n                  onInput={(e) => void (configs.value.mailOptions.user = e)}\n                />\n              </NFormItemGi>\n              <NFormItemGi span={1} label=\"发件邮箱密码\">\n                <NInput\n                  type=\"password\"\n                  showPasswordToggle\n                  inputProps={{\n                    name: 'email-password',\n                    autocomplete: 'new-password',\n                    autocapitalize: 'off',\n                    autocorrect: 'off',\n                  }}\n                  value={configs.value.mailOptions.pass}\n                  onInput={(e) => void (configs.value.mailOptions.pass = e)}\n                />\n              </NFormItemGi>\n            </NGrid>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem name=\"backup\" title=\"备份\">\n          <NForm {...formProps}>\n            <NFormItem label=\"开启备份\">\n              <NSpace vertical>\n                <NSwitch\n                  value={configs.value.backupOptions.enable}\n                  onUpdateValue={(e) =>\n                    void (configs.value.backupOptions.enable = e)\n                  }\n                />\n                <NText class=\"text-xs\" depth={3}>\n                  仅支持备份到 COS\n                </NText>\n              </NSpace>\n            </NFormItem>\n\n            <NFormItem label=\"地域 Region\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.backupOptions.region}\n                onInput={(e) => void (configs.value.backupOptions.region = e)}\n              />\n            </NFormItem>\n            <NFormItem label=\"SecretId\">\n              <NInput\n                {...autosizeableProps}\n                value={configs.value.backupOptions.secretId}\n                onInput={(e) => void (configs.value.backupOptions.secretId = e)}\n              />\n            </NFormItem>\n            <NFormItem label=\"SecretKey\">\n              <NInput\n                {...autosizeableProps}\n                type=\"password\"\n                inputProps={{\n                  name: 'secret-key-password',\n                  autocomplete: 'new-password',\n                  autocapitalize: 'off',\n                  autocorrect: 'off',\n                }}\n                showPasswordToggle\n                value={configs.value.backupOptions.secretKey}\n                onInput={(e) =>\n                  void (configs.value.backupOptions.secretKey = e)\n                }\n              />\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem name=\"baidu_push\" title=\"百度推送\">\n          <NForm {...formProps}>\n            <NFormItem label=\"开启推送\">\n              <NSwitch\n                value={configs.value.baiduSearchOptions.enable}\n                onUpdateValue={(e) =>\n                  void (configs.value.baiduSearchOptions.enable = e)\n                }\n              />\n            </NFormItem>\n            <NFormItem label=\"Token\" path=\"baidu_push\">\n              <NInput\n                {...autosizeableProps}\n                showPasswordToggle\n                type=\"password\"\n                inputProps={{\n                  name: 'baidu-push-password',\n                  autocomplete: 'new-password',\n                  autocapitalize: 'off',\n                  autocorrect: 'off',\n                }}\n                disabled={!configs.value.baiduSearchOptions.enable}\n                value={configs.value.baiduSearchOptions.token}\n                onUpdateValue={(e) =>\n                  void (configs.value.baiduSearchOptions.token = e)\n                }\n              />\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n\n        <NCollapseItem name=\"algolia\" title=\"Algolia Search\">\n          <NForm {...formProps}>\n            <NFormItem label=\"开启 Algolia Search\">\n              <NSwitch\n                value={configs.value.algoliaSearchOptions.enable}\n                onUpdateValue={(e) =>\n                  void (configs.value.algoliaSearchOptions.enable = e)\n                }\n              />\n            </NFormItem>\n            <NFormItem label=\"AppId\">\n              <NInput\n                {...autosizeableProps}\n                disabled={!configs.value.algoliaSearchOptions.enable}\n                value={configs.value.algoliaSearchOptions.appId}\n                onInput={(e) =>\n                  void (configs.value.algoliaSearchOptions.appId = e)\n                }\n              />\n            </NFormItem>\n            <NFormItem label=\"apiKey\">\n              <NInput\n                {...autosizeableProps}\n                type=\"password\"\n                disabled={!configs.value.algoliaSearchOptions.enable}\n                value={configs.value.algoliaSearchOptions.apiKey}\n                onInput={(e) =>\n                  void (configs.value.algoliaSearchOptions.apiKey = e)\n                }\n              />\n            </NFormItem>\n            <NFormItem label=\"indexName\">\n              <NInput\n                {...autosizeableProps}\n                disabled={!configs.value.algoliaSearchOptions.enable}\n                value={configs.value.algoliaSearchOptions.indexName}\n                onInput={(e) =>\n                  void (configs.value.algoliaSearchOptions.indexName = e)\n                }\n              />\n            </NFormItem>\n          </NForm>\n        </NCollapseItem>\n      </NCollapse>\n    </Fragment>\n  )\n})\n\nfunction mergeFullConfigs(configs: any): IConfig {\n  return merge<IConfig, IConfig>(\n    {\n      seo: { title: '', description: '', keywords: [] },\n      url: {\n        wsUrl: '',\n        adminUrl: '',\n        serverUrl: '',\n        webUrl: '',\n      },\n\n      mailOptions: {\n        user: '',\n        pass: '',\n        options: { host: '', port: 465 },\n        enable: false,\n      },\n      commentOptions: {\n        antiSpam: false,\n        spamKeywords: [],\n        blockIps: [],\n        disableNoChinese: false,\n      },\n      backupOptions: {\n        enable: false,\n        secretId: '',\n        secretKey: '',\n        bucket: '',\n        region: '',\n      },\n      baiduSearchOptions: {\n        enable: false,\n        token: '',\n      },\n      algoliaSearchOptions: {\n        enable: false,\n      },\n      adminExtra: {\n        enableAdminProxy: false,\n        background: '',\n        gaodemapKey: '',\n        title: '静かな森',\n      },\n    },\n    configs,\n  )\n}\n","import Plus from '@vicons/fa/es/Plus'\nimport { Icon } from '@vicons/utils'\nimport { RelativeTime } from 'components/time/relative-time'\nimport { useInjector } from 'hooks/use-deps-injection'\nimport { TokenModel } from 'models/token'\nimport {\n  NButton,\n  NCard,\n  NCollapse,\n  NCollapseItem,\n  NDataTable,\n  NDatePicker,\n  NForm,\n  NFormItem,\n  NInput,\n  NLayoutContent,\n  NModal,\n  NPopconfirm,\n  NSpace,\n  NSwitch,\n} from 'naive-ui'\nimport { RouteName } from 'router/name'\nimport { UIStore } from 'stores/ui'\nimport { parseDate, removeToken, RESTManager } from 'utils'\nimport { defineComponent, onBeforeMount, reactive, ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { autosizeableProps } from './system'\n\nexport const TabSecurity = defineComponent(() => {\n  return () => (\n    <Fragment>\n      <div class=\"pt-4\"></div>\n      <NCollapse defaultExpandedNames={['reset']} displayDirective=\"if\">\n        <NCollapseItem name=\"reset\" title=\"修改密码\">\n          <ResetPass />\n        </NCollapseItem>\n\n        <NCollapseItem name=\"token\" title=\"API Token\">\n          <ApiToken />\n        </NCollapseItem>\n      </NCollapse>\n    </Fragment>\n  )\n})\n\nconst ApiToken = defineComponent(() => {\n  const tokens = ref([] as TokenModel[])\n\n  const defaultModel = () => ({\n    name: '',\n    expired: false,\n    expiredTime: new Date(),\n  })\n  const dataModel = reactive(defaultModel())\n  const fetchToken = async () => {\n    const { data } = (await RESTManager.api.auth.token.get()) as any\n    tokens.value = data\n  }\n\n  onBeforeMount(() => {\n    fetchToken()\n  })\n  const newTokenDialogShow = ref(false)\n  const newToken = async () => {\n    const payload = {\n      name: dataModel.name,\n      expired: dataModel.expired\n        ? dataModel.expiredTime.toISOString()\n        : undefined,\n    }\n\n    const response = (await RESTManager.api.auth.token.post({\n      data: payload,\n    })) as TokenModel\n\n    await navigator.clipboard.writeText(response.token)\n\n    newTokenDialogShow.value = false\n    const n = defaultModel()\n    for (const key in n) {\n      dataModel[key] = n[key]\n    }\n    message.success('生成成功, Token 已复制, ' + response.token)\n    await fetchToken()\n    // Backend bug.\n    const index = tokens.value.findIndex((i) => i.name === payload.name)\n    if (index !== -1) {\n      tokens.value[index].token = response.token\n    }\n  }\n\n  const onDeleteToken = async (id) => {\n    await RESTManager.api.auth.token.delete({ params: { id } })\n    message.success('删除成功')\n    const index = tokens.value.findIndex((i) => i.id === id)\n    if (index != -1) {\n      tokens.value.splice(index, 1)\n    }\n  }\n  const uiStore = useInjector(UIStore)\n  return () => (\n    <NLayoutContent class=\"!overflow-visible\">\n      <NModal\n        show={newTokenDialogShow.value}\n        onUpdateShow={(e) => void (newTokenDialogShow.value = e)}\n      >\n        <NCard bordered={false} title=\"创建 Token\" class=\"max-w-full w-[500px]\">\n          <NForm>\n            <NFormItem label=\"名称\" required>\n              <NInput\n                value={dataModel.name}\n                onInput={(e) => void (dataModel.name = e)}\n              ></NInput>\n            </NFormItem>\n\n            <NFormItem label=\"是否过期\">\n              <NSwitch\n                value={dataModel.expired}\n                onUpdateValue={(e) => void (dataModel.expired = e)}\n              ></NSwitch>\n            </NFormItem>\n\n            <NFormItem label=\"过期时间\">\n              <NDatePicker\n                disabled={!dataModel.expired}\n                // @ts-expect-error\n                value={dataModel.expiredTime}\n                type=\"datetime\"\n                onUpdateValue={(e) =>\n                  void (dataModel.expiredTime = new Date(e))\n                }\n              ></NDatePicker>\n            </NFormItem>\n          </NForm>\n          <NSpace>\n            <NButton\n              round\n              onClick={() => void (newTokenDialogShow.value = false)}\n            >\n              取消\n            </NButton>\n            <NButton round type=\"primary\" onClick={newToken}>\n              确定\n            </NButton>\n          </NSpace>\n        </NCard>\n      </NModal>\n\n      <NButton\n        class=\"absolute right-0 top-[-3rem]\"\n        round\n        type=\"primary\"\n        onClick={() => {\n          newTokenDialogShow.value = true\n        }}\n      >\n        <Icon>\n          <Plus />\n        </Icon>\n        <span class=\"ml-2\">新增</span>\n      </NButton>\n      <NDataTable\n        scrollX={Math.max(\n          800,\n          uiStore.contentWidth.value - uiStore.contentInsetWidth.value,\n        )}\n        remote\n        bordered={false}\n        data={tokens.value}\n        columns={[\n          { key: 'name', title: '名称' },\n          {\n            key: 'token',\n            title: 'Token',\n            render({ token }) {\n              return token ?? '*'.repeat(40)\n            },\n          },\n          {\n            title: '创建时间',\n            key: 'created',\n            render({ created }) {\n              return <RelativeTime time={created} />\n            },\n          },\n          {\n            title: '过期时间',\n            key: 'expired',\n            render({ expired }) {\n              return parseDate(expired, 'yyyy年M月d日 HH:mm:ss')\n            },\n          },\n          {\n            title: '操作',\n            key: 'id',\n            render({ id, name }) {\n              return (\n                <NSpace>\n                  <NPopconfirm\n                    positiveText={'取消'}\n                    negativeText=\"删除\"\n                    onNegativeClick={() => {\n                      onDeleteToken(id)\n                    }}\n                  >\n                    {{\n                      trigger: () => (\n                        <NButton text type=\"error\">\n                          删除\n                        </NButton>\n                      ),\n\n                      default: () => (\n                        <span style={{ maxWidth: '12rem' }}>\n                          确定要删除 Token \"{name}\"?\n                        </span>\n                      ),\n                    }}\n                  </NPopconfirm>\n                </NSpace>\n              )\n            },\n          },\n        ]}\n      ></NDataTable>\n    </NLayoutContent>\n  )\n})\nconst ResetPass = defineComponent(() => {\n  const resetPassword = reactive({\n    password: '',\n    reenteredPassword: '',\n  })\n  const formRef = ref<typeof NForm>()\n  const router = useRouter()\n  const reset = async () => {\n    if (!formRef.value) {\n      return\n    }\n\n    formRef.value.validate(async (err) => {\n      if (!err) {\n        await RESTManager.api.master.patch({\n          data: {\n            password: resetPassword.password,\n          },\n        })\n        message.success('更改成功')\n        removeToken()\n        router.push({ name: RouteName.Login })\n      } else {\n        console.log(err)\n      }\n    })\n  }\n\n  function validatePasswordSame(rule, value) {\n    console.log(rule)\n\n    return value === resetPassword.password\n  }\n\n  return () => (\n    <NForm\n      class=\"max-w-[300px]\"\n      ref={formRef}\n      model={resetPassword}\n      rules={{\n        password: [\n          {\n            required: true,\n            message: '请输入密码',\n          },\n        ],\n        reenteredPassword: [\n          {\n            required: true,\n            message: '请再次输入密码',\n            trigger: ['input', 'blur'],\n          },\n          {\n            validator: validatePasswordSame,\n            message: '两次密码输入不一致',\n            trigger: ['blur', 'password-input'],\n          },\n        ],\n      }}\n    >\n      <NFormItem label=\"新密码\" required path=\"password\">\n        <NInput\n          {...autosizeableProps}\n          value={resetPassword.password}\n          onInput={(e) => void (resetPassword.password = e)}\n          type=\"password\"\n        />\n      </NFormItem>\n      <NFormItem label=\"重复密码\" required path=\"reenteredPassword\">\n        <NInput\n          {...autosizeableProps}\n          value={resetPassword.reenteredPassword}\n          onInput={(e) => void (resetPassword.reenteredPassword = e)}\n          type=\"password\"\n        />\n      </NFormItem>\n      <div class=\"w-full text-right\">\n        <NButton onClick={reset} type=\"primary\" round>\n          保存\n        </NButton>\n      </div>\n    </NForm>\n  )\n})\n","import Avatar from 'components/avatar'\nimport { IpInfoPopover } from 'components/ip-info'\nimport { RelativeTime } from 'components/time/relative-time'\nimport { omit, isEmpty } from 'lodash-es'\nimport { UserModel } from 'models/user'\nimport {\n  NButton,\n  NForm,\n  NFormItem,\n  NGi,\n  NGrid,\n  NInput,\n  NText,\n  useMessage,\n} from 'naive-ui'\nimport { RESTManager, shallowDiff } from 'utils'\nimport { defineComponent, ref, onMounted, computed } from 'vue'\nimport styles from './user.module.css'\n\nexport const TabUser = defineComponent(() => {\n  const data = ref({} as UserModel)\n  let origin: UserModel\n\n  async function fetchMaster() {\n    const response = (await RESTManager.api.master.get()) as any\n    data.value = omit(response, ['ok']) as any\n    origin = { ...response }\n  }\n\n  onMounted(async () => {\n    await fetchMaster()\n  })\n  const message = useMessage()\n  const diff = computed(() => shallowDiff(origin, data.value))\n  const handleSave = async () => {\n    await RESTManager.api.master.patch({\n      data: diff.value,\n    })\n    message.success('保存成功~')\n    await fetchMaster()\n  }\n\n  return () => (\n    <Fragment>\n      <NGrid\n        cols={'1 400:1 600:2'}\n        class={styles['tab-user']}\n        xGap={20}\n        yGap={20}\n      >\n        <NGi>\n          <NForm class=\"flex flex-col justify-center items-center \">\n            <NFormItem>\n              <div class={styles['avatar']}>\n                <Avatar src={data.value.avatar} size={200}></Avatar>\n              </div>\n            </NFormItem>\n\n            <NFormItem label=\"上次登陆时间\" class=\"!mt-4\">\n              <div class=\"text-center w-full\">\n                <NText>\n                  {data.value.lastLoginTime ? (\n                    <RelativeTime\n                      time={data.value.lastLoginTime}\n                    ></RelativeTime>\n                  ) : (\n                    'N/A'\n                  )}\n                </NText>\n              </div>\n            </NFormItem>\n\n            <NFormItem label=\"上次登陆地址\">\n              <div class=\"text-center w-full\">\n                {data.value.lastLoginIp ? (\n                  <IpInfoPopover\n                    trigger={'hover'}\n                    ip={data.value.lastLoginIp}\n                    triggerEl={\n                      <NText class=\"cursor-pointer\">\n                        {data.value.lastLoginIp}\n                      </NText>\n                    }\n                  ></IpInfoPopover>\n                ) : (\n                  'N/A'\n                )}\n              </div>\n            </NFormItem>\n\n            <NFormItem>\n              <NButton\n                round\n                class=\"-mt-14\"\n                type=\"primary\"\n                onClick={handleSave}\n                disabled={isEmpty(diff.value)}\n              >\n                保存\n              </NButton>\n            </NFormItem>\n          </NForm>\n        </NGi>\n\n        <NGi>\n          <NForm>\n            <NFormItem label=\"主人名 (username)\">\n              <NInput\n                value={data.value.username}\n                onInput={(e) => {\n                  data.value.username = e\n                }}\n              />\n            </NFormItem>\n\n            <NFormItem label=\"主人昵称 (name)\">\n              <NInput\n                value={data.value.name}\n                onInput={(e) => {\n                  data.value.name = e\n                }}\n              />\n            </NFormItem>\n\n            <NFormItem label=\"主人邮箱 (mail)\">\n              <NInput\n                value={data.value.mail}\n                onInput={(e) => {\n                  data.value.mail = e\n                }}\n              />\n            </NFormItem>\n\n            <NFormItem label=\"个人首页\">\n              <NInput\n                value={data.value.url}\n                onInput={(e) => {\n                  data.value.url = e\n                }}\n              />\n            </NFormItem>\n            <NFormItem label=\"头像\">\n              <NInput\n                value={data.value.avatar}\n                onInput={(e) => {\n                  data.value.avatar = e\n                }}\n              />\n            </NFormItem>\n\n            <NFormItem label=\"个人介绍\">\n              <NInput\n                value={data.value.introduce}\n                onInput={(e) => {\n                  data.value.introduce = e\n                }}\n              />\n            </NFormItem>\n          </NForm>\n        </NGi>\n      </NGrid>\n    </Fragment>\n  )\n})\n","import { ContentLayout } from 'layouts/content'\nimport { NTabPane, NTabs } from 'naive-ui'\nimport { defineComponent, inject, provide, Ref, ref, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { TabSecurity } from './tabs/security'\nimport { TabSystem } from './tabs/system'\nimport { TabUser } from './tabs/user'\n\nenum SettingTab {\n  User = 'user',\n  System = 'system',\n  Security = 'security',\n}\nexport default defineComponent({\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const tabValue = ref(route.params.type as string)\n\n    watch(\n      () => route.params.type,\n      (n) => {\n        if (!n) {\n          return\n        }\n        tabValue.value = n as any\n      },\n    )\n    const headerActionsEl = ref<null | JSX.Element>(null)\n    return () => (\n      <ContentLayout actionsElement={headerActionsEl.value}>\n        <NTabs\n          value={tabValue.value}\n          onUpdateValue={(e) => {\n            router.replace({ ...route, params: { ...route.params, type: e } })\n          }}\n        >\n          <NTabPane tab=\"用户\" name={SettingTab.User}>\n            <TabUser />\n          </NTabPane>\n\n          <NTabPane tab=\"系统\" name={SettingTab.System}>\n            <TabSystem />\n          </NTabPane>\n\n          <NTabPane tab=\"安全\" name={SettingTab.Security}>\n            <TabSecurity />\n          </NTabPane>\n        </NTabs>\n      </ContentLayout>\n    )\n  },\n})\n"],"names":["Object","defineProperty","CheckCircleOutlined","value","vue_1","require$$0","_hoisted_1","xmlns","viewBox","_hoisted_2","createVNode","d","fill","_hoisted_3","defineComponent","name","render","_ctx","_cache","openBlock","createBlock","NFormBaseProps","class","labelPlacement","labelAlign","labelWidth","autocomplete","autosizeableProps","autosize","clearable","style","TabSystem","setHeaderButton","useLayout","HeaderActionButton","disabled","onClick","save","icon","originConfigs","configs","ref","mergeFullConfigs","diff","isEmpty","entries","key","val","fromEntries","map","k","v","Array","isArray","RESTManager","api","options","patch","data","fetchConfig","success","n","deepDiff","toRaw","deep","canSave","async","response","get","omit","cloneDeep","expandedNames","uiStore","useInjector","UIStore","gridCols","computed","viewport","mobile","formProps","reactive","immediate","Fragment","NCollapse","accordion","displayDirective","onUpdateExpandedNames","e","NCollapseItem","title","NForm","NGrid","cols","xGap","NFormItemGi","span","label","NInput","url","webUrl","onInput","serverUrl","adminUrl","wsUrl","NFormItem","seo","description","NDynamicTags","round","type","keywords","onChange","NSwitch","adminExtra","enableAdminProxy","onUpdateValue","background","inputProps","gaodemapKey","showPasswordToggle","commentOptions","antiSpam","spamKeywords","blockIps","disableNoChinese","mailOptions","enable","host","NInputNumber","port","user","autocapitalize","autocorrect","pass","NSpace","vertical","backupOptions","NText","depth","region","secretId","secretKey","baiduSearchOptions","path","token","algoliaSearchOptions","appId","apiKey","indexName","merge","bucket","TabSecurity","defaultExpandedNames","ResetPass","ApiToken","tokens","defaultModel","expired","expiredTime","Date","dataModel","fetchToken","auth","newTokenDialogShow","newToken","payload","toISOString","post","navigator","clipboard","writeText","index2","findIndex","i","NLayoutContent","NModal","show","onUpdateShow","NCard","bordered","required","NDatePicker","NButton","Icon","Plus","NDataTable","scrollX","Math","max","contentWidth","contentInsetWidth","remote","columns","repeat","created","RelativeTime","time","parseDate","id","NPopconfirm","positiveText","negativeText","onNegativeClick","delete","params","splice","trigger","text","default","maxWidth","resetPassword","password","reenteredPassword","formRef","router","useRouter","reset","validate","err","log","master","push","RouteName","Login","rule","model","rules","message","validator","validatePasswordSame","TabUser","origin","fetchMaster","message2","useMessage","shallowDiff","handleSave","styles","yGap","NGi","Avatar","src","avatar","size","lastLoginTime","lastLoginIp","IpInfoPopover","ip","triggerEl","username","mail","introduce","SettingTab","SettingTab2","setup","route","useRoute","tabValue","headerActionsEl","ContentLayout","actionsElement","NTabs","replace","NTabPane","tab","User","System","Security"],"mappings":"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"}