{"version":3,"file":"list-8ab33719-2_19_59.js","sources":["../src/views/manage-says/list.tsx"],"sourcesContent":["import Add12Filled from '@vicons/fluent/es/Add12Filled'\nimport Delete16Regular from '@vicons/fluent/es/Delete16Regular'\nimport { defineComponent, onMounted } from 'vue'\nimport { Table } from 'components/table'\nimport { RelativeTime } from 'components/time/relative-time'\nimport { useTable } from 'hooks/use-table'\nimport { SayResponse } from 'models/say'\nimport { NButton, NPopconfirm, NSpace, useDialog, useMessage } from 'naive-ui'\nimport { TableColumns } from 'naive-ui/lib/data-table/src/interface'\nimport { reactive, watch } from 'vue'\nimport { RouterLink, useRoute } from 'vue-router'\nimport { HeaderActionButton } from '../../components/button/rounded-button'\nimport { ContentLayout } from '../../layouts/content'\nimport { RESTManager } from '../../utils/rest'\nconst ManageSayListView = defineComponent({\n  name: 'SayList',\n  setup(props, ctx) {\n    const { checkedRowKeys, data, pager, loading, fetchDataFn } = useTable(\n      (data, pager) =>\n        async (page = route.query.page || 1, size = 30) => {\n          const response = await RESTManager.api.says.get<SayResponse>({\n            params: {\n              page,\n              size,\n              select: 'title text _id id created modified author source',\n            },\n          })\n          data.value = response.data\n          pager.value = response.page\n        },\n    )\n\n    const message = useMessage()\n    const dialog = useDialog()\n\n    const route = useRoute()\n    const fetchData = fetchDataFn\n    watch(\n      () => route.query.page,\n      async (n) => {\n        // @ts-expect-error\n        await fetchData(n)\n      },\n    )\n\n    onMounted(async () => {\n      await fetchData()\n    })\n\n    const DataTable = defineComponent({\n      setup() {\n        const columns = reactive<TableColumns<any>>([\n          {\n            type: 'selection',\n            options: ['none', 'all'],\n          },\n          {\n            title: '创建于',\n            key: 'created',\n            width: 100,\n            render(row) {\n              return (\n                <RouterLink to={'/says/edit?id=' + row.id}>\n                  <RelativeTime time={row.created} />\n                </RouterLink>\n              )\n            },\n          },\n          {\n            title: '内容',\n            key: 'text',\n          },\n          { title: '作者', key: 'author' },\n          { title: '来源', key: 'source' },\n          {\n            title: '操作',\n            fixed: 'right',\n            key: 'id',\n            width: 130,\n            render(row) {\n              return (\n                <NSpace wrap={false}>\n                  <RouterLink to={'/says/edit?id=' + row.id}>\n                    <NButton text type=\"primary\" size=\"tiny\">\n                      编辑\n                    </NButton>\n                  </RouterLink>\n                  <NPopconfirm\n                    positiveText={'取消'}\n                    negativeText=\"删除\"\n                    onNegativeClick={async () => {\n                      await RESTManager.api.says(row.id).delete()\n                      message.success('删除成功')\n                      await fetchData(pager.value.currentPage)\n                    }}\n                  >\n                    {{\n                      trigger: () => (\n                        <NButton text type=\"error\" size=\"tiny\">\n                          移除\n                        </NButton>\n                      ),\n\n                      default: () => (\n                        <span style={{ maxWidth: '12rem' }}>\n                          确定要删除“{row.text}” ?\n                        </span>\n                      ),\n                    }}\n                  </NPopconfirm>\n                </NSpace>\n              )\n            },\n          },\n        ])\n\n        return () => (\n          <Table\n            loading={loading.value}\n            columns={columns}\n            data={data}\n            onFetchData={fetchData}\n            pager={pager}\n            onUpdateCheckedRowKeys={(keys) => {\n              checkedRowKeys.value = keys\n            }}\n          ></Table>\n        )\n      },\n    })\n\n    return () => {\n      return (\n        <ContentLayout>\n          {{\n            actions: () => (\n              <>\n                <HeaderActionButton\n                  variant=\"error\"\n                  disabled={checkedRowKeys.value.length == 0}\n                  onClick={() => {\n                    dialog.warning({\n                      title: '警告',\n                      content: '你确定要删除？',\n                      positiveText: '确定',\n                      negativeText: '不确定',\n                      onPositiveClick: async () => {\n                        for (const id of checkedRowKeys.value) {\n                          await RESTManager.api.says(id as string).delete()\n                        }\n                        checkedRowKeys.value.length = 0\n                        message.success('删除成功')\n\n                        await fetchData()\n                      },\n                    })\n                  }}\n                  icon={<Delete16Regular />}\n                />\n                <HeaderActionButton to={'/says/edit'} icon={<Add12Filled />} />\n              </>\n            ),\n            default: () => <DataTable />,\n          }}\n        </ContentLayout>\n      )\n    }\n  },\n})\n\nexport default ManageSayListView\n"],"names":["ManageSayListView","defineComponent","name","setup","props","ctx","checkedRowKeys","data","pager","loading","fetchDataFn","useTable","data2","pager2","async","page","route","query","size","response","RESTManager","api","says","get","params","select","value","message","useMessage","dialog","useDialog","useRoute","fetchData","n","DataTable","columns","reactive","type","options","title","key","width","render","row","RouterLink","to","id","RelativeTime","time","created","fixed","NSpace","wrap","NButton","text","NPopconfirm","positiveText","negativeText","onNegativeClick","delete","success","currentPage","trigger","default","style","maxWidth","Table","onFetchData","onUpdateCheckedRowKeys","keys","ContentLayout","actions","HeaderActionButton","variant","disabled","length","onClick","warning","content","onPositiveClick","icon","Delete16Regular","Add12Filled"],"mappings":"mgBAcMA,EAAoBC,EAAgB,CACxCC,KAAM,UACNC,MAAMC,EAAOC,SACLC,eAAEA,OAAgBC,QAAMC,UAAOC,cAASC,GAAgBC,GAC5D,CAACC,EAAMC,IACLC,MAAOC,EAAOC,EAAMC,MAAMF,MAAQ,EAAGG,EAAO,YACpCC,QAAiBC,EAAYC,IAAIC,KAAKC,IAAiB,CAC3DC,OAAQ,CACNT,KAAAA,EACAG,KAAAA,EACAO,OAAQ,wDAGPC,MAAQP,EAASZ,OAChBmB,MAAQP,EAASJ,QAIvBY,EAAUC,IACVC,EAASC,IAETd,EAAQe,IACRC,EAAYtB,KAEhB,IAAMM,EAAMC,MAAMF,OAClBD,MAAOmB,UAECD,EAAUC,SAIVnB,gBACFkB,aAGFE,EAAYjC,EAAgB,CAChCE,cACQgC,EAAUC,EAA4B,CAC1C,CACEC,KAAM,YACNC,QAAS,CAAC,OAAQ,QAEpB,CACEC,MAAO,MACPC,IAAK,UACLC,MAAO,IACPC,OAAOC,KAEFC,EAAD,CAAYC,GAAI,iBAAmBF,EAAIG,MACpCC,EAAD,CAAcC,KAAML,EAAIM,YAKhC,CACEV,MAAO,KACPC,IAAK,QAEP,CAAED,MAAO,KAAMC,IAAK,UACpB,CAAED,MAAO,KAAMC,IAAK,UACpB,CACED,MAAO,KACPW,MAAO,QACPV,IAAK,KACLC,MAAO,IACPC,OAAOC,KAEFQ,EAAD,CAAQC,MAAM,KACXR,EAAD,CAAYC,GAAI,iBAAmBF,EAAIG,MACpCO,EAAD,CAASC,MAAI,EAACjB,KAAK,UAAUnB,KAAK,QAAO,SAI1CqC,EAAD,CACEC,aAAc,KACdC,aAAa,KACbC,gBAAiB5C,gBACTM,EAAYC,IAAIC,KAAKqB,EAAIG,IAAIa,WAC3BC,QAAQ,cACV5B,EAAUxB,EAAMkB,MAAMmC,eAG7B,CACCC,QAAS,MACNT,EAAD,CAASC,MAAI,EAACjB,KAAK,QAAQnB,KAAK,QAAO,MAKzC6C,QAAS,MACN,OAAD,CAAMC,MAAO,CAAEC,SAAU,UAAW,SAC3BtB,EAAIW,KAAK,mBAW3B,MACJY,EAAD,CACEzD,QAASA,EAAQiB,MACjBS,QAAAA,EACA5B,KAAAA,EACA4D,YAAanC,EACbxB,MAAAA,EACA4D,uBAAyBC,MACR3C,MAAQ2C,cAO1B,MAEFC,EAAD,KACG,CACCC,QAAS,eAEJC,EAAD,CACEC,QAAQ,QACRC,SAAyC,GAA/BpE,EAAeoB,MAAMiD,OAC/BC,QAAS,OACAC,QAAQ,CACbtC,MAAO,KACPuC,QAAS,UACTtB,aAAc,KACdC,aAAc,MACdsB,gBAAiBjE,oBACJgC,KAAMxC,EAAeoB,YACxBN,EAAYC,IAAIC,KAAKwB,GAAca,WAE5BjC,MAAMiD,OAAS,IACtBf,QAAQ,cAEV5B,QAIZgD,OAAOC,EAAD,UAEPT,EAAD,CAAoB3B,GAAI,aAAcmC,OAAOE,EAAD,SAGhDnB,QAAS,MAAO7B,EAAD"}