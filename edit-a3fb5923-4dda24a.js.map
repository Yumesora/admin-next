{"version":3,"file":"edit-a3fb5923-4dda24a.js","sources":["../node_modules/.pnpm/@vicons+fluent@0.11.0/node_modules/@vicons/fluent/es/Comment12Filled.js","../src/views/manage-says/edit.tsx"],"sourcesContent":["import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 12 12'\n}\nconst _hoisted_2 = /*#__PURE__*/ _createVNode(\n  'g',\n  {\n    fill: 'none'\n  },\n  [\n    /*#__PURE__*/ _createVNode('path', {\n      d: 'M3 1a2 2 0 0 0-2 2v4a2 2 0 0 0 2 2v1.5a.5.5 0 0 0 .777.416L6.651 9H9a2 2 0 0 0 2-2V3a2 2 0 0 0-2-2H3z',\n      fill: 'currentColor'\n    })\n  ],\n  -1\n  /* HOISTED */\n)\nexport default defineComponent({\n  name: 'Comment12Filled',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createBlock('svg', _hoisted_1, [_hoisted_2])\n  }\n})\n","import TelegramPlane from '@vicons/fa/es/TelegramPlane'\nimport Comment12Filled from '@vicons/fluent/es/Comment12Filled'\nimport { HeaderActionButton } from 'components/button/rounded-button'\nimport { fetchHitokoto, SentenceType } from 'external/api/hitokoto'\nimport { useParsePayloadIntoData } from 'hooks/use-parse-payload'\nimport { ContentLayout } from 'layouts/content'\nimport { isString, transform } from 'lodash-es'\nimport { SayModel } from 'models/say'\nimport { NForm, NFormItem, NInput, useDialog } from 'naive-ui'\nimport { RouteName } from 'router/name'\nimport { RESTManager } from 'utils'\nimport {\n  computed,\n  defineComponent,\n  onBeforeMount,\n  onMounted,\n  reactive,\n  ref,\n  toRaw,\n} from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\ntype SayReactiveType = {\n  text: string\n  source: string\n  author: string\n}\n\nconst EditSay = defineComponent({\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n\n    const resetReactive: () => SayReactiveType = () => ({\n      text: '',\n      author: '',\n      source: '',\n    })\n\n    const placeholder = ref({} as SayModel)\n\n    onBeforeMount(() => {\n      fetchHitokoto([\n        SentenceType.原创,\n        SentenceType.哲学,\n        SentenceType.文学,\n        SentenceType.诗词,\n      ]).then((data) => {\n        placeholder.value = {\n          source: data.from,\n          text: data.hitokoto,\n          author: data.from_who || data.creator,\n        }\n      })\n    })\n    const dialog = useDialog()\n    const handlePostHitokoto = async () => {\n      const send = async () => {\n        await RESTManager.api.says.post({\n          data: placeholder.value,\n        })\n        message.success('发布成功')\n        router.push({ name: RouteName.ListSay })\n      }\n      if (data.text || data.author || data.source) {\n        dialog.create({\n          title: '警告',\n          content: '发布一言会覆盖现有的内容, 要继续吗',\n          type: 'warning',\n          negativeText: '取消',\n          positiveText: '确定',\n\n          onPositiveClick() {\n            send()\n          },\n        })\n      } else {\n        send()\n      }\n    }\n\n    const parsePayloadIntoReactiveData = (payload: SayModel) =>\n      useParsePayloadIntoData(data)(payload)\n    const data = reactive<SayReactiveType>(resetReactive())\n    const id = computed(() => route.query.id)\n\n    onMounted(async () => {\n      const $id = id.value\n      if ($id && typeof $id == 'string') {\n        const payload = (await RESTManager.api.says($id).get({})) as any\n\n        const data = payload.data\n        parsePayloadIntoReactiveData(data as SayModel)\n      }\n    })\n\n    const handleSubmit = async () => {\n      const parseDataToPayload = (): { [key in keyof SayModel]?: any } => {\n        try {\n          if (!data.text || data.text.trim().length == 0) {\n            throw '内容为空'\n          }\n\n          return {\n            ...transform(\n              toRaw(data),\n              (res, v, k) => (\n                (res[k] =\n                  typeof v == 'undefined'\n                    ? null\n                    : typeof v == 'string' && v.length == 0\n                    ? ''\n                    : v),\n                res\n              ),\n            ),\n            text: data.text.trim(),\n          }\n        } catch (e) {\n          message.error(e as any)\n\n          throw e\n        }\n      }\n      if (id.value) {\n        // update\n        if (!isString(id.value)) {\n          return\n        }\n        const $id = id.value as string\n        await RESTManager.api.says($id).put({\n          data: parseDataToPayload(),\n        })\n        message.success('修改成功')\n      } else {\n        // create\n        await RESTManager.api.says.post({\n          data: parseDataToPayload(),\n        })\n        message.success('发布成功')\n      }\n\n      router.push({ name: RouteName.ListSay })\n    }\n\n    return () => (\n      <ContentLayout\n        actionsElement={\n          <Fragment>\n            {isString(id) ? (\n              <HeaderActionButton\n                name=\"更新\"\n                variant=\"info\"\n                onClick={handleSubmit}\n                icon={<TelegramPlane></TelegramPlane>}\n              ></HeaderActionButton>\n            ) : (\n              <>\n                <HeaderActionButton\n                  name=\"发布一言\"\n                  variant={'info'}\n                  onClick={handlePostHitokoto}\n                  icon={<Comment12Filled></Comment12Filled>}\n                ></HeaderActionButton>\n                <HeaderActionButton\n                  name=\"发布自己说的\"\n                  variant={'primary'}\n                  onClick={handleSubmit}\n                  icon={<TelegramPlane></TelegramPlane>}\n                ></HeaderActionButton>\n              </>\n            )}\n          </Fragment>\n        }\n      >\n        <NForm>\n          <NFormItem\n            label=\"内容\"\n            required\n            labelPlacement=\"left\"\n            labelStyle={{ width: '4rem' }}\n          >\n            <NInput\n              type=\"textarea\"\n              autofocus\n              autosize={{ minRows: 6, maxRows: 8 }}\n              placeholder={placeholder.value.text}\n              value={data.text}\n              onInput={(e) => void (data.text = e)}\n            ></NInput>\n          </NFormItem>\n          <NFormItem\n            label=\"作者\"\n            labelPlacement=\"left\"\n            labelStyle={{ width: '4rem' }}\n          >\n            <NInput\n              placeholder={placeholder.value.author}\n              value={data.author}\n              onInput={(e) => void (data.author = e)}\n            ></NInput>\n          </NFormItem>\n          <NFormItem\n            label=\"来源\"\n            labelPlacement=\"left\"\n            labelStyle={{ width: '4rem' }}\n          >\n            <NInput\n              placeholder={placeholder.value.source}\n              value={data.source}\n              onInput={(e) => void (data.source = e)}\n            ></NInput>\n          </NFormItem>\n        </NForm>\n      </ContentLayout>\n    )\n  },\n})\n\nexport default EditSay\n"],"names":["_hoisted_1","xmlns","viewBox","_hoisted_2","fill","d","defineComponent","name","render","_ctx","_cache","_openBlock","_createBlock","EditSay","setup","route","useRoute","router","useRouter","placeholder","ref","SentenceType","then","data2","value","source","from","text","hitokoto","author","from_who","creator","dialog","useDialog","handlePostHitokoto","async","send","RESTManager","api","says","post","data","success","push","RouteName","ListSay","create","title","content","type","negativeText","positiveText","onPositiveClick","reactive","id","computed","query","$id","payload","useParsePayloadIntoData","get","handleSubmit","parseDataToPayload","trim","length","transform","toRaw","res","v","k","e","error","isString","put","ContentLayout","actionsElement","Fragment","HeaderActionButton","variant","onClick","icon","TelegramPlane","Comment12Filled","NForm","NFormItem","label","required","labelPlacement","labelStyle","width","NInput","autofocus","autosize","minRows","maxRows","onInput"],"mappings":"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"}