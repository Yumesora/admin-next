{"version":3,"file":"write-ac837e55-e1cfe40.js","sources":["../src/views/manage-posts/write.tsx"],"sourcesContent":["import SlidersH from '@vicons/fa/es/SlidersH'\nimport TelegramPlane from '@vicons/fa/es/TelegramPlane'\nimport { Icon } from '@vicons/utils'\nimport { HeaderActionButton } from 'components/button/rounded-button'\nimport { EditorToggleWrapper } from 'components/editor'\nimport { MaterialInput } from 'components/input/material-input'\nimport { UnderlineInput } from 'components/input/underline-input'\nimport { ParseContentButton } from 'components/logic/parse-button'\nimport { BASE_URL } from 'constants/env'\nimport { ContentLayout } from 'layouts/content'\nimport { isString } from 'lodash-es'\nimport { CategoryModel } from 'models/category'\nimport { PostModel } from 'models/post'\nimport {\n  NDrawer,\n  NDrawerContent,\n  NDynamicTags,\n  NForm,\n  NFormItem,\n  NInput,\n  NSelect,\n  NSwitch,\n  useMessage,\n} from 'naive-ui'\nimport { RouteName } from 'router/name'\nimport { CategoryStore } from 'stores/category'\nimport { useInjector } from 'hooks/use-deps-injection'\nimport { RESTManager } from 'utils/rest'\nimport { computed, defineComponent, onMounted, reactive, ref, toRaw } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\ntype PostReactiveType = {\n  title: string\n  text: string\n  slug: string\n  categoryId: string\n  copyright: boolean\n  tags: string[]\n  hide: boolean\n  summary: string\n}\n\nconst PostWriteView = defineComponent(() => {\n  const route = useRoute()\n\n  const categoryStore = useInjector(CategoryStore)\n  onMounted(async () => {\n    await categoryStore.fetch()\n  })\n\n  const resetReactive: () => PostReactiveType = () => ({\n    categoryId: categoryStore.data?.value?.[0].id ?? '',\n    slug: '',\n    text: '',\n    title: '',\n    copyright: true,\n    tags: [],\n    hide: false,\n    summary: '',\n  })\n\n  const parsePayloadIntoReactiveData = (payload: PostModel) => {\n    const raw = toRaw(data)\n    const keys = Object.keys(raw)\n    for (const k in payload) {\n      if (keys.includes(k)) {\n        data[k] = payload[k]\n      }\n    }\n  }\n\n  const data = reactive<PostReactiveType>(resetReactive())\n  const id = computed(() => route.query.id)\n\n  // const currentSelectCategoryId = ref('')\n  const category = computed(\n    () =>\n      categoryStore.get(data.categoryId) ||\n      categoryStore.data?.value?.[0] ||\n      ({} as CategoryModel),\n  )\n\n  onMounted(async () => {\n    const $id = id.value\n    if ($id && typeof $id == 'string') {\n      const payload = (await RESTManager.api.posts($id).get()) as any\n      parsePayloadIntoReactiveData(payload.data as PostModel)\n    }\n  })\n\n  const drawerShow = ref(false)\n\n  const message = useMessage()\n  const router = useRouter()\n  const handleSubmit = async () => {\n    if (id.value) {\n      // update\n      if (!isString(id.value)) {\n        return\n      }\n      const $id = id.value as string\n      await RESTManager.api.posts($id).put({\n        data: {\n          ...toRaw(data),\n          summary:\n            data.summary && data.summary.trim() != ''\n              ? data.summary.trim()\n              : null,\n        },\n      })\n      message.success('修改成功')\n    } else {\n      // create\n      await RESTManager.api.posts.post({\n        data: {\n          ...toRaw(data),\n          summary: data.summary.trim() == '' ? null : data.summary.trim(),\n        },\n      })\n      message.success('发布成功')\n    }\n\n    router.push({ name: RouteName.ViewPost, hash: '|publish' })\n  }\n  return () => (\n    <ContentLayout\n      title={id.value ? '修改文章' : '撰写新文章'}\n      actionsElement={\n        <>\n          <ParseContentButton data={data} />\n          <HeaderActionButton\n            icon={<TelegramPlane />}\n            onClick={handleSubmit}\n          ></HeaderActionButton>\n        </>\n      }\n      footerButtonElement={\n        <>\n          <button\n            onClick={() => {\n              drawerShow.value = true\n            }}\n          >\n            <Icon>\n              <SlidersH />\n            </Icon>\n          </button>\n        </>\n      }\n    >\n      <MaterialInput\n        class=\"mt-3 relative z-10\"\n        label=\"想想取个什么标题好呢~\"\n        value={data.title}\n        onChange={(e) => {\n          data.title = e\n        }}\n      ></MaterialInput>\n\n      <div class={'text-gray-500 py-3'}>\n        <label class=\"prefix\">{`${BASE_URL}/${category.value.slug}/`}</label>\n\n        <UnderlineInput\n          class=\"ml-2\"\n          value={data.slug}\n          onChange={(e) => {\n            data.slug = e\n          }}\n        />\n      </div>\n\n      <EditorToggleWrapper\n        loading={!!(id.value && !data.title)}\n        onChange={(v) => {\n          data.text = v\n        }}\n        text={data.text}\n      />\n\n      {/* Drawer  */}\n\n      <NDrawer\n        show={drawerShow.value}\n        width={450}\n        style={{ maxWidth: '90vw' }}\n        placement=\"right\"\n        onUpdateShow={(s) => {\n          drawerShow.value = s\n        }}\n      >\n        <NDrawerContent title=\"文章设定\">\n          <NForm>\n            <NFormItem label=\"分类\" required path=\"category\">\n              <NSelect\n                placeholder=\"请选择\"\n                value={data.categoryId}\n                onUpdateValue={(e) => {\n                  data.categoryId = e\n                }}\n                options={\n                  categoryStore.data.value?.map((i) => ({\n                    label: i.name,\n                    value: i.id,\n                    key: i.id,\n                  })) || []\n                }\n              ></NSelect>\n            </NFormItem>\n\n            <NFormItem label=\"标签\">\n              {/* TODO 自动补全标签 */}\n              <NDynamicTags\n                value={data.tags}\n                onUpdateValue={(e) => {\n                  data.tags.length = 0\n                  data.tags.push(...e)\n                }}\n              ></NDynamicTags>\n            </NFormItem>\n\n            <NFormItem label=\"概要\">\n              <NInput\n                placeholder=\"文章概要\"\n                value={data.summary}\n                onInput={(e) => void (data.summary = e)}\n              />\n            </NFormItem>\n\n            <NFormItem\n              label=\"隐藏\"\n              labelWidth={100}\n              labelAlign=\"right\"\n              labelPlacement=\"left\"\n            >\n              <NSwitch\n                value={data.hide}\n                onUpdateValue={(e) => void (data.hide = e)}\n              ></NSwitch>\n            </NFormItem>\n\n            <NFormItem\n              label=\"版权注明\"\n              labelWidth={100}\n              labelAlign=\"right\"\n              labelPlacement=\"left\"\n            >\n              <NSwitch\n                value={data.copyright}\n                onUpdateValue={(e) => void (data.copyright = e)}\n              ></NSwitch>\n            </NFormItem>\n          </NForm>\n        </NDrawerContent>\n      </NDrawer>\n    </ContentLayout>\n  )\n})\n\nexport default PostWriteView\n"],"names":["PostWriteView","defineComponent","route","useRoute","categoryStore","useInjector","CategoryStore","async","fetch","data","reactive","categoryId","value","id","slug","text","title","copyright","tags","hide","summary","computed","query","category","get","$id","payload","raw","toRaw","keys","Object","k","includes","RESTManager","api","posts","drawerShow","ref","message","useMessage","router","useRouter","handleSubmit","isString","put","trim","success","post","push","name","RouteName","ViewPost","hash","ContentLayout","actionsElement","ParseContentButton","HeaderActionButton","icon","TelegramPlane","onClick","footerButtonElement","Icon","SlidersH","MaterialInput","class","label","onChange","e","BASE_URL","UnderlineInput","EditorToggleWrapper","loading","v","NDrawer","show","width","style","maxWidth","placement","onUpdateShow","s","NDrawerContent","NForm","NFormItem","required","path","NSelect","placeholder","onUpdateValue","options","map","i","key","NDynamicTags","length","NInput","onInput","labelWidth","labelAlign","labelPlacement","NSwitch"],"mappings":"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"}