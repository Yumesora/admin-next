{"version":3,"file":"index-7dee4ebc-4dda24a.js","sources":["../src/components/table/index.tsx"],"sourcesContent":["import { Pager } from 'models/base'\nimport { NDataTable } from 'naive-ui'\nimport { dataTableProps } from 'naive-ui/lib/data-table/src/DataTable'\nimport {\n  RowKey,\n  SortState,\n  TableColumns,\n} from 'naive-ui/lib/data-table/src/interface'\nimport { UIStore } from 'stores/ui'\nimport { useInjector } from 'hooks/use-deps-injection'\nimport { defineComponent, reactive, ref, Ref, watch } from 'vue'\nimport {\n  LocationQueryValue,\n  onBeforeRouteUpdate,\n  useRoute,\n  useRouter,\n} from 'vue-router'\nimport styles from './index.module.css'\nexport const tableRowStyle = styles['table-row']\n\nconst TableProps = [\n  'data',\n  'pager',\n  'onUpdateCheckedRowKeys',\n  'onUpdateSorter',\n  'columns',\n  'onFetchData',\n  'nTableProps',\n  'noPagination',\n  'checkedRowKey',\n  'maxWidth',\n  'loading',\n] as const\n\ninterface ITable<T = any> {\n  data: Ref<T[]>\n  pager: Ref<Pager>\n  onUpdateCheckedRowKeys?: (keys: string[]) => void\n  checkedRowKey?: string\n  onUpdateSorter?: (\n    sortProps: { sortBy: string; sortOrder: number },\n    status: SortState,\n  ) => void\n  onFetchData: (\n    page?: string | number | LocationQueryValue[],\n    size?: number,\n  ) => any\n  columns: TableColumns<T>\n  nTableProps: Partial<Record<keyof typeof dataTableProps, any>>\n  noPagination?: boolean\n\n  maxWidth?: number\n\n  loading?: boolean\n}\n\nexport const Table = defineComponent<ITable>((props, ctx) => {\n  const {\n    data,\n    noPagination = false,\n    pager,\n    onUpdateCheckedRowKeys,\n    onUpdateSorter,\n    nTableProps,\n    columns,\n    onFetchData: fetchData,\n    checkedRowKey = 'id',\n    maxWidth = 1200,\n  } = props\n\n  const router = useRouter()\n  const route = useRoute()\n  const checkedRowKeys = ref<RowKey[]>([])\n  const sortProps = reactive({\n    sortBy: '',\n    sortOrder: 0,\n  })\n  const loading = ref(true)\n\n  // HACK\n  const clean = watch(\n    () => data.value,\n    (n) => {\n      // if (n.length) {\n\n      // }\n      loading.value = false\n      clean()\n    },\n  )\n\n  onBeforeRouteUpdate((to, from, next) => {\n    loading.value = true\n    next()\n    loading.value = false\n  })\n\n  const ui = useInjector(UIStore)\n\n  return () => (\n    <NDataTable\n      {...nTableProps}\n      loading={props.loading ?? loading.value}\n      remote\n      scrollX={Math.max(ui.contentInsetWidth.value, maxWidth)}\n      pagination={\n        noPagination\n          ? undefined\n          : {\n              page: pager.value.currentPage,\n              pageSize: pager.value.size,\n              pageCount: pager.value.totalPage,\n              // showQuickJumper: ui.viewport.value.mobile ? false : true,\n              showQuickJumper: true,\n              pageSlot: ui.viewport.value.mobile\n                ? ui.contentInsetWidth.value < 400\n                  ? 2\n                  : 3\n                : undefined,\n              onChange: async (page) => {\n                router.push({\n                  query: { ...route.query, page },\n                  path: route.path,\n                })\n              },\n            }\n      }\n      bordered={false}\n      data={data.value}\n      checkedRowKeys={checkedRowKeys.value}\n      rowKey={(r) => r[checkedRowKey]}\n      onUpdateCheckedRowKeys={(keys) => {\n        checkedRowKeys.value = keys\n        onUpdateCheckedRowKeys?.(keys as any)\n      }}\n      rowClassName={() => styles['table-row']}\n      onUpdateSorter={async (status) => {\n        if (!status) {\n          return\n        }\n\n        columns.forEach((column) => {\n          /** column.sortOrder !== undefined means it is uncontrolled */\n          if (!('sortOrder' in column)) {\n            return\n          }\n          if (column.sortOrder === undefined) return\n          if (!status) {\n            column.sortOrder = false\n            return\n          }\n          if (column.key === status.columnKey) column.sortOrder = status.order\n          else column.sortOrder = false\n        })\n\n        const { columnKey, order } = status\n\n        sortProps.sortBy =\n          sortProps.sortBy && sortProps.sortBy == columnKey\n            ? ''\n            : (columnKey as string)\n        sortProps.sortOrder = order ? { descend: -1, ascend: 1 }[order] : 1\n        onUpdateSorter?.(sortProps, status)\n        await fetchData()\n      }}\n      columns={columns}\n    ></NDataTable>\n  )\n})\nTable.props = TableProps\n"],"names":["tableRowStyle","styles","Table","defineComponent","props","ctx","data","noPagination","pager","onUpdateCheckedRowKeys","onUpdateSorter","nTableProps","columns","onFetchData","fetchData","checkedRowKey","maxWidth","router","useRouter","route","useRoute","checkedRowKeys","ref","sortProps","reactive","sortBy","sortOrder","loading","clean","watch","value","n","to","from","next","ui","useInjector","UIStore","NDataTable","remote","scrollX","Math","max","contentInsetWidth","pagination","page","currentPage","pageSize","size","pageCount","totalPage","showQuickJumper","pageSlot","viewport","mobile","onChange","async","push","query","path","bordered","rowKey","r","keys","rowClassName","status","forEach","column","key","columnKey","order","descend","ascend"],"mappings":"4LAkBaA,EAAgBC,EAsChBC,EAAQC,GAAwB,CAACC,EAAOC,WAC7CC,KACJA,eACAC,GAAe,QACfC,yBACAC,iBACAC,cACAC,UACAC,EACAC,YAAaC,gBACbC,EAAgB,cAChBC,EAAW,MACTZ,EAEEa,EAASC,IACTC,EAAQC,IACRC,EAAiBC,EAAc,IAC/BC,EAAYC,EAAS,CACzBC,OAAQ,GACRC,UAAW,IAEPC,EAAUL,GAAI,GAGdM,EAAQC,GACZ,IAAMvB,EAAKwB,QACVC,MAISD,OAAQ,YAKA,CAACE,EAAIC,EAAMC,OACrBJ,OAAQ,QAERA,OAAQ,WAGZK,EAAKC,EAAYC,SAEhB,oBACJC,EAAD,IACM3B,EACJgB,QAAS,WAAMA,WAAWA,EAAQG,MAClCS,QAAM,EACNC,QAASC,KAAKC,IAAIP,EAAGQ,kBAAkBb,MAAOd,GAC9C4B,WACErC,OACI,EACA,CACEsC,KAAMrC,EAAMsB,MAAMgB,YAClBC,SAAUvC,EAAMsB,MAAMkB,KACtBC,UAAWzC,EAAMsB,MAAMoB,UAEvBC,iBAAiB,EACjBC,SAAUjB,EAAGkB,SAASvB,MAAMwB,OACxBnB,EAAGQ,kBAAkBb,MAAQ,IAC3B,EACA,OACF,EACJyB,SAAUC,MAAOX,MACRY,KAAK,CACVC,MAAO,IAAKvC,EAAMuC,MAAOb,KAAAA,GACzBc,KAAMxC,EAAMwC,SAKxBC,UAAU,EACVtD,KAAMA,EAAKwB,MACXT,eAAgBA,EAAeS,MAC/B+B,OAASC,GAAMA,EAAE/C,GACjBN,uBAAyBsD,MACRjC,MAAQiC,aACEA,IAE3BC,aAAc,IAAM/D,EACpBS,eAAgB8C,MAAOS,QAChBA,WAIGC,SAASC,kBAEMA,QAGI,IAArBA,EAAOzC,YACNuC,GAIDE,EAAOC,MAAQH,EAAOI,YAAkB3C,UAAYuC,EAAOK,QAHtD5C,WAAY,YAOjB2C,UAAEA,QAAWC,GAAUL,IAEnBxC,OACRF,EAAUE,QAAUF,EAAUE,QAAU4C,EACpC,GACCA,IACG3C,UAAY4C,EAAQ,CAAEC,WAAaC,OAAQ,GAAIF,GAAS,aACjD/C,EAAW0C,SACtBnD,KAERF,QAAAA,QAINV,EAAME,MArJa,CACjB,OACA,QACA,yBACA,iBACA,UACA,cACA,cACA,eACA,gBACA,WACA"}