{"version":3,"file":"index-ef22fa4d-8f602ed.js","sources":["../src/utils/event-bus.ts","../node_modules/.pnpm/parseuri@0.0.6/node_modules/parseuri/index.js","../node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js","../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/common.js","../node_modules/.pnpm/debug@4.3.2/node_modules/debug/src/browser.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/url.js","../node_modules/.pnpm/has-cors@1.1.0/node_modules/has-cors/index.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/globalThis.browser.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/.pnpm/engine.io-parser@4.0.3/node_modules/engine.io-parser/lib/commons.js","../node_modules/.pnpm/engine.io-parser@4.0.3/node_modules/engine.io-parser/lib/encodePacket.browser.js","../node_modules/.pnpm/base64-arraybuffer@0.1.4/node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/.pnpm/engine.io-parser@4.0.3/node_modules/engine.io-parser/lib/decodePacket.browser.js","../node_modules/.pnpm/engine.io-parser@4.0.3/node_modules/engine.io-parser/lib/index.js","../node_modules/.pnpm/component-emitter@1.3.0/node_modules/component-emitter/index.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/util.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transport.js","../node_modules/.pnpm/yeast@0.1.2/node_modules/yeast/index.js","../node_modules/.pnpm/parseqs@0.0.6/node_modules/parseqs/index.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/polling.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/websocket-constructor.browser.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/transports/index.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/socket.js","../node_modules/.pnpm/engine.io-client@5.2.0/node_modules/engine.io-client/lib/index.js","../node_modules/.pnpm/socket.io-parser@4.0.4/node_modules/socket.io-parser/dist/is-binary.js","../node_modules/.pnpm/socket.io-parser@4.0.4/node_modules/socket.io-parser/dist/binary.js","../node_modules/.pnpm/socket.io-parser@4.0.4/node_modules/socket.io-parser/dist/index.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/on.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/typed-events.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/socket.js","../node_modules/.pnpm/backo2@1.0.2/node_modules/backo2/index.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/manager.js","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/build/index.js","../src/socket/types.ts","../node_modules/.pnpm/socket.io-client@4.2.0/node_modules/socket.io-client/wrapper.mjs","../src/utils/notification.ts","../src/socket/socket-client.tsx","../src/socket/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/*\n * @Author: Innei\n * @Date: 2020-05-23 14:31:11\n * @LastEditTime: 2021-01-09 12:37:37\n * @LastEditors: Innei\n * @FilePath: /web/utils/observable.ts\n * @MIT\n */\n\nimport { EventTypes } from 'socket/types'\n\nexport class EventBus {\n  private observers: Record<string, Function[]> = {}\n\n  on(event: EventTypes, handler: any): void\n  on(event: string, handler: any): void\n  on(event: string, handler: (...rest: any) => void) {\n    const queue = this.observers[event]\n    if (!queue) {\n      this.observers[event] = [handler]\n      return\n    }\n    const isExist = queue.some((func) => {\n      return func === handler\n    })\n    if (!isExist) {\n      this.observers[event].push(handler)\n    }\n  }\n\n  emit(event: string, payload?: any): void\n  emit(event: EventTypes, payload?: any): void\n  emit(event: EventTypes, payload?: any) {\n    const queue = this.observers[event]\n    if (!queue) {\n      return\n    }\n    for (const func of queue) {\n      func.call(this, payload)\n    }\n  }\n\n  off(event: string, handler?: (...rest: any) => void) {\n    const queue = this.observers[event]\n    if (!queue) {\n      return\n    }\n\n    if (handler) {\n      const index = queue.findIndex((func) => {\n        return func === handler\n      })\n      if (index !== -1) {\n        queue.splice(index, 1)\n      }\n    } else {\n      queue.length = 0\n    }\n  }\n}\nexport const bus = new EventBus()\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (() => {\n  if (typeof self !== \"undefined\") {\n    return self;\n  } else if (typeof window !== \"undefined\") {\n    return window;\n  } else {\n    return Function(\"return this\")();\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nconst hasCORS = require(\"has-cors\");\nconst globalThis = require(\"./globalThis\");\n\nmodule.exports = function(opts) {\n  const xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  const xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  const enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {}\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if (\"undefined\" !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\n        \"Microsoft.XMLHTTP\"\n      );\n    } catch (e) {}\n  }\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst withNativeBlob =\n  typeof Blob === \"function\" ||\n  (typeof Blob !== \"undefined\" &&\n    Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n  return typeof ArrayBuffer.isView === \"function\"\n    ? ArrayBuffer.isView(obj)\n    : obj && obj.buffer instanceof ArrayBuffer;\n};\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (withNativeBlob && data instanceof Blob) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(data, callback);\n    }\n  } else if (\n    withNativeArrayBuffer &&\n    (data instanceof ArrayBuffer || isView(data))\n  ) {\n    if (supportsBinary) {\n      return callback(data);\n    } else {\n      return encodeBlobAsBase64(new Blob([data]), callback);\n    }\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst encodeBlobAsBase64 = (data, callback) => {\n  const fileReader = new FileReader();\n  fileReader.onload = function() {\n    const content = fileReader.result.split(\",\")[1];\n    callback(\"b\" + content);\n  };\n  return fileReader.readAsDataURL(data);\n};\n\nmodule.exports = encodePacket;\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n\nlet base64decoder;\nif (withNativeArrayBuffer) {\n  base64decoder = require(\"base64-arraybuffer\");\n}\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    return {\n      type: \"message\",\n      data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n    };\n  }\n  const packetType = PACKET_TYPES_REVERSE[type];\n  if (!packetType) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst decodeBase64Packet = (data, binaryType) => {\n  if (base64decoder) {\n    const decoded = base64decoder.decode(data);\n    return mapBinary(decoded, binaryType);\n  } else {\n    return { base64: true, data }; // fallback for old browsers\n  }\n};\n\nconst mapBinary = (data, binaryType) => {\n  switch (binaryType) {\n    case \"blob\":\n      return data instanceof ArrayBuffer ? new Blob([data]) : data;\n    case \"arraybuffer\":\n    default:\n      return data; // assuming the data is already an ArrayBuffer\n  }\n};\n\nmodule.exports = decodePacket;\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","const globalThis = require(\"./globalThis\");\n\nmodule.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\n\nmodule.exports.installTimerFunctions = (obj, opts) => {\n  if (opts.useNativeTimers) {\n    obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n    obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n  } else {\n    obj.setTimeoutFn = setTimeout.bind(globalThis);\n    obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n  }\n};\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst { installTimerFunctions } = require(\"./util\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n    installTimerFunctions(this, opts);\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n\n    const pause = () => {\n      debug(\"paused\");\n      this.readyState = \"paused\";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug(\"polling got data %s\", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug(\"writing close packet\");\n      this.write([{ type: \"close\" }]);\n    };\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick, installTimerFunctions } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    installTimerFunctions(this, opts);\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            this.setTimeoutFn(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      this.setTimeoutFn(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + this.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = this.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","const globalThis = require(\"../globalThis\");\nconst nextTick = (() => {\n  const isPromiseAvailable =\n    typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n  if (isPromiseAvailable) {\n    return cb => Promise.resolve().then(cb);\n  } else {\n    return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n  }\n})();\n\nmodule.exports = {\n  WebSocket: globalThis.WebSocket || globalThis.MozWebSocket,\n  usingBrowserWebSocket: true,\n  defaultBinaryType: \"arraybuffer\",\n  nextTick\n};\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","const XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\nconst { installTimerFunctions } = require(\"./util\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    installTimerFunctions(this, opts);\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          \"beforeunload\",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\");\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      this.setTimeoutFn(() => {\n        this.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", this.onDrain.bind(this))\n      .on(\"packet\", this.onPacket.bind(this))\n      .on(\"error\", this.onError.bind(this))\n      .on(\"close\", () => {\n        this.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          this.upgrading = true;\n          this.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            this.emit(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          this.emit(\"upgradeError\", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      this.emit(\"upgradeError\", error);\n    };\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.removeListener(\"close\", onclose);\n      this.removeListener(\"upgrading\", onupgrade);\n    };\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"ping\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    this.clearTimeoutFn(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = this.setTimeoutFn(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener(\"upgrade\", cleanupAndClose);\n      this.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n\n      // clear timers\n      this.clearTimeoutFn(this.pingIntervalTimer);\n      this.clearTimeoutFn(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            (0, on_1.on)(io, \"open\", this.onopen.bind(this)),\n            (0, on_1.on)(io, \"packet\", this.onpacket.bind(this)),\n            (0, on_1.on)(io, \"error\", this.onerror.bind(this)),\n            (0, on_1.on)(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst util_1 = require(\"engine.io-client/lib/util\");\nconst socket_1 = require(\"./socket\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0, util_1.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0, on_1.on)(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = (0, on_1.on)(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0, on_1.on)(socket, \"ping\", this.onping.bind(this)), (0, on_1.on)(socket, \"data\", this.ondata.bind(this)), (0, on_1.on)(socket, \"error\", this.onerror.bind(this)), (0, on_1.on)(socket, \"close\", this.onclose.bind(this)), (0, on_1.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0, url_1.url)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n","export enum EventTypes {\n  GATEWAY_CONNECT = 'GATEWAY_CONNECT',\n  GATEWAY_DISCONNECT = 'GATEWAY_DISCONNECT',\n\n  VISITOR_ONLINE = 'VISITOR_ONLINE',\n  VISITOR_OFFLINE = 'VISITOR_OFFLINE',\n\n  AUTH_FAILED = 'AUTH_FAILED',\n\n  COMMENT_CREATE = 'COMMENT_CREATE',\n\n  POST_CREATE = 'POST_CREATE',\n  POST_UPDATE = 'POST_UPDATE',\n  POST_DELETE = 'POST_DELETE',\n\n  NOTE_CREATE = 'NOTE_CREATE',\n  NOTE_UPDATE = 'NOTE_UPDATE',\n  NOTE_DELETE = 'NOTE_DELETE',\n\n  SAY_CREATE = 'SAY_CREATE',\n  SAY_DELETE = 'SAY_DELETE',\n  SAY_UPDATE = 'SAY_UPDATE',\n\n  LINK_APPLY = 'LINK_APPLY',\n\n  DANMAKU_CREATE = 'DANMAKU_CREATE',\n  // util\n  CONTENT_REFRESH = 'CONTENT_REFRESH', // 内容更新或重置 页面需要重载\n  // for admin\n  IMAGE_REFRESH = 'IMAGE_REFRESH',\n  IMAGE_FETCH = 'IMAGE_FETCH',\n\n  ADMIN_NOTIFICATION = 'ADMIN_NOTIFICATION',\n}\n\nexport type NotificationTypes = 'error' | 'warn' | 'success' | 'info'\n","import io from \"./build/index.js\";\n\nexport const Manager = io.Manager;\nexport const Socket = io.Socket;\nexport { io };\nexport default io;\n","export class BrowserNotification {\n  constructor() {\n    this.initNotice()\n  }\n\n  initNotice(): Promise<boolean> {\n    return new Promise((r, j) => {\n      if (!('Notification' in window)) {\n        j(new Error('浏览器不支持发送通知'))\n      } else if (Notification.permission !== 'denied') {\n        Notification.requestPermission().then((p) =>\n          p === 'granted' ? r(true) : j(new Error('已拒绝通知')),\n        )\n      } else if (Notification.permission === 'denied') {\n        return j(new Error('已拒绝通知'))\n      } else {\n        j(true)\n      }\n    })\n  }\n\n  notice(\n    title: string,\n    body: string,\n    options: Omit<NotificationOptions, 'body'> = {},\n  ): Promise<Notification | undefined> {\n    return new Promise((r) => {\n      this.initNotice().then((b) => {\n        if (b && !document.hasFocus()) {\n          const notification = new Notification(title, { body, ...options })\n          r(notification)\n        }\n      })\n    })\n  }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { NButton, NSpace } from 'naive-ui'\nimport { router } from 'router'\nimport io from 'socket.io-client'\nimport { getToken } from 'utils/auth'\nimport { bus } from 'utils/event-bus'\nimport { BrowserNotification } from 'utils/notification'\nimport { configs } from '../configs'\nimport { EventTypes, NotificationTypes } from './types'\n\nconst Notification = {\n  get warning() {\n    return window.notification.warning\n  },\n  get warn() {\n    return window.notification.warning\n  },\n  get success() {\n    return window.notification.success\n  },\n  get error() {\n    return window.notification.error\n  },\n  get info() {\n    return window.notification.info\n  },\n}\nexport class SocketClient {\n  public socket!: ReturnType<typeof io>\n\n  #title = configs.title\n  #notice = new BrowserNotification()\n  constructor() {\n    const token = getToken()\n    if (!token) {\n      return\n    }\n    this.socket = io(\n      (import.meta.env.VITE_APP_GATEWAY || 'http://localhost:2333') + '/admin',\n      {\n        timeout: 10000,\n        reconnectionDelay: 3000,\n        autoConnect: false,\n        reconnectionAttempts: 3,\n        transports: ['websocket'],\n        query: {\n          token,\n        },\n      },\n    )\n    this.initIO()\n  }\n\n  private isInit = false\n  initIO() {\n    if (!this.socket || this.isInit) {\n      return\n    }\n    this.socket.open()\n    this.socket.on(\n      'message',\n      (payload: string | Record<'type' | 'data', any>) => {\n        if (typeof payload !== 'string') {\n          return this.handleEvent(payload.type, payload.data)\n        }\n        const { data, type } = JSON.parse(payload) as {\n          data: any\n          type: EventTypes\n        }\n        this.handleEvent(type, data)\n      },\n    )\n\n    this.isInit = true\n  }\n  reconnect() {\n    const token = getToken()\n    if (!token) {\n      return\n    }\n    this.socket.io.opts.query = {\n      token,\n    }\n    this.socket.open()\n  }\n  handleEvent(type: EventTypes, payload: any) {\n    switch (type) {\n      case EventTypes.GATEWAY_CONNECT: {\n        break\n      }\n      case EventTypes.GATEWAY_DISCONNECT: {\n        Notification.warning(payload)\n        break\n      }\n      case EventTypes.AUTH_FAILED: {\n        console.log('等待登陆中...')\n        this.socket.close()\n        break\n      }\n      case EventTypes.COMMENT_CREATE: {\n        const body = payload.author + ': ' + payload.text\n        const handler = () => {\n          router.push({ name: 'comment' })\n          notice.destroy()\n        }\n        const notice = Notification.success({\n          title: '新的评论',\n          content: body,\n          action() {\n            return (\n              <NSpace justify=\"end\">\n                <NButton onClick={handler} type=\"primary\" round ghost>\n                  查看\n                </NButton>\n              </NSpace>\n            )\n          },\n        })\n        // TODO\n        this.#notice.notice(this.#title + ' 收到新的评论', body).then((no) => {\n          if (!no) {\n            return\n          }\n          no.onclick = handler\n        })\n        break\n      }\n      case EventTypes.ADMIN_NOTIFICATION: {\n        const { type, message } = payload as {\n          type: NotificationTypes\n          message: string\n        }\n\n        Notification[type]({ content: message })\n        break\n      }\n      case EventTypes.CONTENT_REFRESH: {\n        Notification.warning({ content: '数据库有变动, 将在 1 秒后重载页面' })\n        setTimeout(() => {\n          location.reload()\n        }, 1000)\n        break\n      }\n      case EventTypes.LINK_APPLY: {\n        const sitename = payload.name\n\n        const handler = () => {\n          router.push({ name: 'friends' })\n          notice.destroy()\n        }\n        const notice = Notification.success({\n          title: '新的友链申请',\n          content: sitename,\n          action() {\n            return (\n              <NSpace justify=\"end\">\n                <NButton onClick={handler} type=\"primary\" round ghost>\n                  查看\n                </NButton>\n              </NSpace>\n            )\n          },\n        })\n        this.#notice\n          .notice(this.#title + ' 收到新的友链申请', sitename)\n          .then((n) => {\n            if (!n) {\n              return\n            }\n\n            n.onclick = handler\n          })\n        break\n      }\n    }\n\n    bus.emit(type, payload)\n  }\n\n  destory() {\n    this.socket.disconnect()\n    this.socket.off('message')\n    this.isInit = false\n  }\n}\n","import { SocketClient } from './socket-client'\n\nconst client = new SocketClient()\n\nexport { client as socket }\n"],"names":["bus","on","event","handler","queue","this","observers","some","func","push","emit","payload","call","off","index","findIndex","splice","length","re","parts","parseuri","str","src","b","indexOf","e","substring","replace","query","data","m2","exec","uri","i2","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","queryKey","$0","$1","$2","s","m","h","d","w","y","ms","val","options","type","String","match","n","parseFloat","toLowerCase","parse","isFinite","long","ms2","msAbs","Math","abs","plural","fmtLong","round","fmtShort","Error","JSON","stringify","name","isPlural","common","env","namespace","prevTime","namespacesCache","enabledCache","enableOverride","args","debug2","enabled","self2","curr","Number","Date","diff","prev","createDebug","coerce","unshift","format","formatter","formatters","formatArgs","log","apply","useColors","color","selectColor","extend","destroy","defineProperty","enumerable","configurable","get","namespaces","set","v","init","delimiter","newDebug","regexp","toString","debug","default","stack","message","disable","map","toNamespace","skips","join","enable","save","len","RegExp","test","humanize","require$$0","warn","keys","forEach","key","hash","charCodeAt","colors","load","module","exports","c","lastC","storage","setItem","removeItem","error","r","getItem","process","DEBUG","window","__nwjs","navigator","userAgent","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","localStorage","localstorage","warned","j","Object","url_1","value","require$$1","loc","location","protocol","charAt","port","id","href","XMLHttpRequest","err","globalThis_browser","self","Function","hasCORS","globalThis","xmlhttprequest","opts","xdomain","xscheme","enablesXDR","XDomainRequest","concat","PACKET_TYPES","create","PACKET_TYPES_REVERSE","commons","withNativeBlob","Blob","prototype","withNativeArrayBuffer","ArrayBuffer","encodeBlobAsBase64","callback","fileReader","FileReader","onload","content","result","readAsDataURL","chars","encodePacket_browser","supportsBinary","isView","buffer","arraybuffer","bytes","Uint8Array","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","ERROR_PACKET","base64decoder","decodeBase64Packet","binaryType","decoded","decode","mapBinary","encodePacket","decodePacket","encodedPacket","SEPARATOR","fromCharCode","lib","encodePayload","packets","length2","encodedPackets","Array","count","packet","decodePayload","encodedPayload","decodedPacket","Emitter2","mixin","addEventListener","fn","_callbacks","once","on2","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks2","slice","listeners","hasListeners","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","parser","Emitter","installTimerFunctions","require$$2","require$$3","transport","constructor","readyState","socket","onError","msg","desc","description","open","doOpen","close","doClose","onClose","send","write","onOpen","writable","onData","onPacket","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","alphabet","seed","i","num","encoded","floor","now","encode","yeast","yeast_1","Transport","parseqs","require$$4","polling","poll","pause","onPause","total","doPoll","doWrite","schema","secure","timestampRequests","timestampParam","sid","b64","hostname","Polling","pick","require$$5","hasXHR2","responseType","method","async","xd","xs","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","hasXDR","onLoad","onerror","responseText","onreadystatechange","status","Request","requestsCount","requests","onSuccess","cleanup","fromError","empty","abort","attachEvent","unloadHandler","pollingXhrModule","isSSL","forceBase64","request","assign","req","pollXhr","rNewline","rEscapedNewline","callbacks","pollingJsonp","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","target","setAttribute","action","initIframe","html","submit","complete","nextTick","Promise","resolve","then","websocketConstructor_browser","WebSocket","MozWebSocket","usingBrowserWebSocket","defaultBinaryType","require$$6","isReactNative","product","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","lastPacket","compress","perMessageDeflate","Buffer","byteLength","threshold","WS","websocket","XHR","JSONP","jsonp","forceJSONP","transports","parseuri2","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","transportOptions","closeOnBeforeunload","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","offlineEventListener","createTransport","o","clone","EIO","transport2","Socket","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","upgrading","flush","to","onTransportClose","onupgrade","onHandshake","resetPingTimeout","sendPacket","code","filterUpgrades","cleanupAndClose","waitForUpgrade","reason","pingIntervalTimer","filteredUpgrades","libModule","isBinary_1","withNativeFile","File","isBinary","toJSON","isArray","hasBinary","binary","is_binary_1","buffers","placeholder","_placeholder","newData","_deconstructPacket","_reconstructPacket","packetData","pack","attachments","binary_1","is_binary_12","PacketType","PacketType2","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","deconstruction","deconstructPacket","add","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","tryParse","Decoder","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","reconstructPacket","on_1","typedEvents","listener","emitReserved","super","socket_io_parser_1","typed_events_1","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","StrictEventEmitter","io2","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","io","auth","_autoConnect","subEvents","subs","onpacket","_readyState","pop","isTransportWritable","engine","volatile","_packet","onconnect","onevent","onack","ondisconnect","ack","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","backo2","Backoff","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","manager","eio","util_1","socket_1","require$$7","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","socket2","skipReconnect","openSubDestroy","errorSub","timer","onping","ondata","ondecoded","_destroy","active","_close","delay","onreconnect","attempt","Manager","manager_1","lookup","cache","parsed","url","sameNamespace","forceNew","multiplex","socket_io_parser_12","manager_2","socket_12","EventTypes","EventTypes2","initNotice","Notification","permission","requestPermission","notice","title","hasFocus","notification","warning","success","info","client","configs","BrowserNotification","token","getToken","initIO","isInit","handleEvent","GATEWAY_CONNECT","GATEWAY_DISCONNECT","AUTH_FAILED","COMMENT_CREATE","author","text","NSpace","justify","NButton","onClick","ghost","__privateGet","no","onclick","ADMIN_NOTIFICATION","type2","CONTENT_REFRESH","reload","LINK_APPLY","sitename","destory"],"mappings":"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"}