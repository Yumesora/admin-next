{"version":3,"file":"list-1c134ac1-865ef4e.js","sources":["../src/views/manage-pages/list.tsx"],"sourcesContent":["import Add12Filled from '@vicons/fluent/es/Add12Filled'\nimport Delete16Regular from '@vicons/fluent/es/Delete16Regular'\nimport { defineComponent, onMounted } from 'vue'\nimport { Table } from 'components/table'\nimport { RelativeTime } from 'components/time/relative-time'\nimport { useTable } from 'hooks/use-table'\nimport { PageModel, PageResponse } from 'models/page'\nimport { NButton, NPopconfirm, NSpace, useDialog, useMessage } from 'naive-ui'\nimport { TableColumns } from 'naive-ui/lib/data-table/src/interface'\nimport { parseDate } from 'utils/time'\nimport { reactive, watch } from 'vue'\nimport { RouterLink, useRoute } from 'vue-router'\nimport { HeaderActionButton } from '../../components/button/rounded-button'\nimport { ContentLayout } from '../../layouts/content'\nimport { RESTManager } from '../../utils/rest'\nexport const ManagePageListView = defineComponent({\n  name: 'PageList',\n  setup() {\n    const { checkedRowKeys, data, pager, sortProps, fetchDataFn } = useTable(\n      (data, pager) =>\n        async (page = route.query.page || 1, size = 20) => {\n          const response = await RESTManager.api.pages.get<PageResponse>({\n            params: {\n              page,\n              size,\n              select: 'title subtitle _id id created modified slug',\n              ...(sortProps.sortBy\n                ? { sortBy: sortProps.sortBy, sortOrder: sortProps.sortOrder }\n                : {}),\n            },\n          })\n          data.value = response.data\n        },\n    )\n\n    const message = useMessage()\n    const dialog = useDialog()\n\n    const route = useRoute()\n    const fetchData = fetchDataFn\n    watch(\n      () => route.query.page,\n      async (n) => {\n        // @ts-expect-error\n        await fetchData(n)\n      },\n    )\n\n    onMounted(async () => {\n      await fetchData()\n    })\n\n    const DataTable = defineComponent({\n      setup() {\n        const columns = reactive<TableColumns<PageModel>>([\n          {\n            type: 'selection',\n            options: ['none', 'all'],\n          },\n          {\n            title: '标题',\n            sortOrder: false,\n            sorter: 'default',\n            key: 'title',\n            width: 300,\n            render(row) {\n              return (\n                <RouterLink to={'/pages/edit?id=' + row.id}>\n                  {row.title}\n                </RouterLink>\n              )\n            },\n          },\n          {\n            title: '副标题',\n            key: 'subtitle',\n          },\n          {\n            title: '路径',\n            key: 'slug',\n            render(row) {\n              return '/' + row.slug\n            },\n          },\n          {\n            title: '创建于',\n            key: 'created',\n            sortOrder: 'descend',\n            sorter: 'default',\n            render(row) {\n              return <RelativeTime time={row.created} />\n            },\n          },\n          {\n            title: '修改于',\n            key: 'modified',\n            sorter: 'default',\n            sortOrder: false,\n            render(row) {\n              return <RelativeTime time={row.modified} />\n            },\n          },\n          {\n            title: '操作',\n            fixed: 'right',\n            key: 'id',\n            render(row) {\n              return (\n                <NSpace>\n                  <NPopconfirm\n                    positiveText={'取消'}\n                    negativeText=\"删除\"\n                    onNegativeClick={async () => {\n                      await RESTManager.api.pages(row.id).delete()\n                      message.success('删除成功')\n                      await fetchData(pager.value.currentPage)\n                    }}\n                  >\n                    {{\n                      trigger: () => (\n                        <NButton text type=\"error\" size=\"tiny\">\n                          移除\n                        </NButton>\n                      ),\n\n                      default: () => (\n                        <span style={{ maxWidth: '12rem' }}>\n                          确定要删除 {row.title} ?\n                        </span>\n                      ),\n                    }}\n                  </NPopconfirm>\n                </NSpace>\n              )\n            },\n          },\n        ])\n\n        return () => (\n          <Table\n            noPagination\n            columns={columns}\n            data={data}\n            onFetchData={fetchData}\n            pager={pager}\n            onUpdateCheckedRowKeys={(keys) => {\n              checkedRowKeys.value = keys\n            }}\n            onUpdateSorter={async (props) => {\n              sortProps.sortBy = props.sortBy\n              sortProps.sortOrder = props.sortOrder\n            }}\n          ></Table>\n        )\n      },\n    })\n\n    return () => {\n      return (\n        <ContentLayout>\n          {{\n            actions: () => (\n              <>\n                <HeaderActionButton\n                  variant=\"error\"\n                  disabled={checkedRowKeys.value.length == 0}\n                  onClick={() => {\n                    dialog.warning({\n                      title: '警告',\n                      content: '你确定要删除？',\n                      positiveText: '确定',\n                      negativeText: '不确定',\n                      onPositiveClick: async () => {\n                        for (const id of checkedRowKeys.value) {\n                          await RESTManager.api.pages(id as string).delete()\n                        }\n                        checkedRowKeys.value.length = 0\n                        message.success('删除成功')\n\n                        await fetchData()\n                      },\n                    })\n                  }}\n                  icon={<Delete16Regular />}\n                />\n                <HeaderActionButton to={'/pages/edit'} icon={<Add12Filled />} />\n              </>\n            ),\n            default: () => <DataTable />,\n          }}\n        </ContentLayout>\n      )\n    }\n  },\n})\n"],"names":["ManagePageListView","defineComponent","name","setup","checkedRowKeys","data","pager","sortProps","fetchDataFn","useTable","data2","pager2","async","page","route","query","size","response","RESTManager","api","pages","get","params","select","sortBy","sortOrder","value","message","useMessage","dialog","useDialog","useRoute","fetchData","n","DataTable","columns","reactive","type","options","title","sorter","key","width","render","row","RouterLink","to","id","slug","RelativeTime","time","created","modified","fixed","NSpace","NPopconfirm","positiveText","negativeText","onNegativeClick","delete","success","currentPage","trigger","NButton","text","default","style","maxWidth","Table","noPagination","onFetchData","onUpdateCheckedRowKeys","keys","onUpdateSorter","props","ContentLayout","actions","HeaderActionButton","variant","disabled","length","onClick","warning","content","onPositiveClick","icon","Delete16Regular","Add12Filled"],"mappings":"mgBAeaA,EAAqBC,EAAgB,CAChDC,KAAM,WACNC,cACQC,eAAEA,OAAgBC,QAAMC,YAAOC,cAAWC,GAAgBC,GAC9D,CAACC,EAAMC,IACLC,MAAOC,EAAOC,EAAMC,MAAMF,MAAQ,EAAGG,EAAO,YACpCC,QAAiBC,EAAYC,IAAIC,MAAMC,IAAkB,CAC7DC,OAAQ,CACNT,KAAAA,EACAG,KAAAA,EACAO,OAAQ,iDACJhB,EAAUiB,OACV,CAAEA,OAAQjB,EAAUiB,OAAQC,UAAWlB,EAAUkB,WACjD,QAGHC,MAAQT,EAASZ,QAItBsB,EAAUC,IACVC,EAASC,IAEThB,EAAQiB,IACRC,EAAYxB,KAEhB,IAAMM,EAAMC,MAAMF,OAClBD,MAAOqB,UAECD,EAAUC,SAIVrB,gBACFoB,aAGFE,EAAYjC,EAAgB,CAChCE,cACQgC,EAAUC,EAAkC,CAChD,CACEC,KAAM,YACNC,QAAS,CAAC,OAAQ,QAEpB,CACEC,MAAO,KACPd,WAAW,EACXe,OAAQ,UACRC,IAAK,QACLC,MAAO,IACPC,OAAOC,KAEFC,EAAD,CAAYC,GAAI,kBAAoBF,EAAIG,IACrCH,EAAIL,QAKb,CACEA,MAAO,MACPE,IAAK,YAEP,CACEF,MAAO,KACPE,IAAK,OACLE,OAAOC,GACE,IAAMA,EAAII,MAGrB,CACET,MAAO,MACPE,IAAK,UACLhB,UAAW,UACXe,OAAQ,UACRG,OAAOC,KACGK,EAAD,CAAcC,KAAMN,EAAIO,WAGnC,CACEZ,MAAO,MACPE,IAAK,WACLD,OAAQ,UACRf,WAAW,EACXkB,OAAOC,KACGK,EAAD,CAAcC,KAAMN,EAAIQ,YAGnC,CACEb,MAAO,KACPc,MAAO,QACPZ,IAAK,KACLE,OAAOC,KAEFU,EAAD,OACGC,EAAD,CACEC,aAAc,KACdC,aAAa,KACbC,gBAAiB9C,gBACTM,EAAYC,IAAIC,MAAMwB,EAAIG,IAAIY,WAC5BC,QAAQ,cACV5B,EAAU1B,EAAMoB,MAAMmC,eAG7B,CACCC,QAAS,MACNC,EAAD,CAASC,MAAI,EAAC3B,KAAK,QAAQrB,KAAK,QAAO,MAKzCiD,QAAS,MACN,OAAD,CAAMC,MAAO,CAAEC,SAAU,UAAW,SAC3BvB,EAAIL,MAAM,kBAW5B,MACJ6B,EAAD,CACEC,cAAY,EACZlC,QAAAA,EACA9B,KAAAA,EACAiE,YAAatC,EACb1B,MAAAA,EACAiE,uBAAyBC,MACR9C,MAAQ8C,GAEzBC,eAAgB7D,MAAO8D,MACXlD,OAASkD,EAAMlD,SACfC,UAAYiD,EAAMjD,sBAO/B,MAEFkD,EAAD,KACG,CACCC,QAAS,eAEJC,EAAD,CACEC,QAAQ,QACRC,SAAyC,GAA/B3E,EAAesB,MAAMsD,OAC/BC,QAAS,OACAC,QAAQ,CACb3C,MAAO,KACP4C,QAAS,UACT3B,aAAc,KACdC,aAAc,MACd2B,gBAAiBxE,oBACJmC,KAAM3C,EAAesB,YACxBR,EAAYC,IAAIC,MAAM2B,GAAcY,WAE7BjC,MAAMsD,OAAS,IACtBpB,QAAQ,cAEV5B,QAIZqD,OAAOC,EAAD,UAEPT,EAAD,CAAoB/B,GAAI,cAAeuC,OAAOE,EAAD,SAGjDtB,QAAS,MAAO/B,EAAD"}