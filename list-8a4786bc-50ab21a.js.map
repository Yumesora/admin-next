{"version":3,"file":"list-8a4786bc-50ab21a.js","sources":["../node_modules/.pnpm/@vicons+fa@0.11.0/node_modules/@vicons/fa/es/ThumbsUp.js","../src/views/manage-posts/list.tsx"],"sourcesContent":["import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 512 512'\n}\nconst _hoisted_2 = /*#__PURE__*/ _createVNode(\n  'path',\n  {\n    d: 'M104 224H24c-13.255 0-24 10.745-24 24v240c0 13.255 10.745 24 24 24h80c13.255 0 24-10.745 24-24V248c0-13.255-10.745-24-24-24zM64 472c-13.255 0-24-10.745-24-24s10.745-24 24-24s24 10.745 24 24s-10.745 24-24 24zM384 81.452c0 42.416-25.97 66.208-33.277 94.548h101.723c33.397 0 59.397 27.746 59.553 58.098c.084 17.938-7.546 37.249-19.439 49.197l-.11.11c9.836 23.337 8.237 56.037-9.308 79.469c8.681 25.895-.069 57.704-16.382 74.757c4.298 17.598 2.244 32.575-6.148 44.632C440.202 511.587 389.616 512 346.839 512l-2.845-.001c-48.287-.017-87.806-17.598-119.56-31.725c-15.957-7.099-36.821-15.887-52.651-16.178c-6.54-.12-11.783-5.457-11.783-11.998v-213.77c0-3.2 1.282-6.271 3.558-8.521c39.614-39.144 56.648-80.587 89.117-113.111c14.804-14.832 20.188-37.236 25.393-58.902C282.515 39.293 291.817 0 312 0c24 0 72 8 72 81.452z',\n    fill: 'currentColor'\n  },\n  null,\n  -1\n  /* HOISTED */\n)\nexport default defineComponent({\n  name: 'ThumbsUp',\n  render: function render(_ctx, _cache) {\n    return _openBlock(), _createBlock('svg', _hoisted_1, [_hoisted_2])\n  }\n})\n","import Book from '@vicons/fa/es/Book'\nimport ThumbsUp from '@vicons/fa/es/ThumbsUp'\nimport Add12Filled from '@vicons/fluent/es/Add12Filled'\nimport Delete16Regular from '@vicons/fluent/es/Delete16Regular'\nimport { Icon } from '@vicons/utils'\nimport { Table } from 'components/table'\nimport { EditColumn } from 'components/table/edit-column'\nimport { RelativeTime } from 'components/time/relative-time'\nimport { useInjector } from 'hooks/use-deps-injection'\nimport { useTable } from 'hooks/use-table'\nimport { omit } from 'lodash-es'\nimport { NButton, NPopconfirm, NSpace, useDialog, useMessage } from 'naive-ui'\nimport {\n  FilterOption,\n  FilterState,\n  TableBaseColumn,\n  TableColumns,\n} from 'naive-ui/lib/data-table/src/interface'\nimport { CategoryStore } from 'stores/category'\nimport {\n  computed,\n  ComputedRef,\n  defineComponent,\n  onMounted,\n  reactive,\n  watch,\n} from 'vue'\nimport { RouterLink, useRoute } from 'vue-router'\nimport { HeaderActionButton } from '../../components/button/rounded-button'\nimport { ContentLayout } from '../../layouts/content'\nimport { PostModel, PostResponse } from '../../models/post'\nimport { RESTManager } from '../../utils/rest'\nexport const ManagePostListView = defineComponent({\n  name: 'PostList',\n  setup() {\n    const { loading, checkedRowKeys, data, pager, sortProps, fetchDataFn } =\n      useTable(\n        (data, pager) =>\n          async (page = route.query.page || 1, size = 20) => {\n            const response = await RESTManager.api.posts.get<PostResponse>({\n              params: {\n                page,\n                size,\n                select:\n                  'title _id id created modified categoryId copyright tags count',\n                ...(sortProps.sortBy\n                  ? { sortBy: sortProps.sortBy, sortOrder: sortProps.sortOrder }\n                  : {}),\n              },\n            })\n\n            data.value = response.data\n            pager.value = response.pagination\n          },\n      )\n\n    const message = useMessage()\n    const dialog = useDialog()\n\n    const route = useRoute()\n    const fetchData = fetchDataFn\n    watch(\n      () => route.query.page,\n      async (n) => {\n        // @ts-expect-error\n        await fetchData(n)\n      },\n    )\n\n    const categoryStore = useInjector(CategoryStore)\n\n    onMounted(async () => {\n      await fetchData()\n      await categoryStore.fetch()\n    })\n\n    const DataTable = defineComponent({\n      setup() {\n        const categoryFilterOptions: ComputedRef<FilterOption[]> = computed(\n          () =>\n            categoryStore.data.value?.map((i) => ({\n              label: i.name,\n              value: i.id,\n            })) || [],\n        )\n\n        const columns = reactive<TableColumns<PostModel>>([\n          {\n            type: 'selection',\n            options: ['none', 'all'],\n          },\n          {\n            title: '标题',\n            sortOrder: false,\n            sorter: 'default',\n            key: 'title',\n            width: 200,\n            ellipsis: true,\n            render(row) {\n              return (\n                <RouterLink to={'/posts/edit?id=' + row.id}>\n                  {row.title}\n                </RouterLink>\n              )\n            },\n          },\n          {\n            title: '分类',\n            sortOrder: false,\n            sorter: 'default',\n            key: 'category',\n            width: 80,\n            ellipsis: true,\n            // @ts-expect-error\n            filterOptions: categoryFilterOptions,\n            filter: true,\n            render(row) {\n              const map = categoryStore.map.value\n\n              if (!map) {\n                return ''\n              }\n\n              return (\n                <EditColumn\n                  returnToConfrim={false}\n                  initialValue={\n                    categoryStore.map.value.get(row.categoryId)?.name ?? ''\n                  }\n                  onSubmit={async (v) => {\n                    await RESTManager.api.posts(row.id).patch({\n                      data: {\n                        categoryId: v,\n                      },\n                    })\n\n                    message.success('修改成功~!')\n                    data.value.find((i) => i.id === row.id).categoryId = v\n                  }}\n                  type=\"select\"\n                  options={\n                    categoryStore.data.value?.map((i) => ({\n                      label: i.name,\n                      value: i.id,\n                      key: i.id,\n                    })) || []\n                  }\n                ></EditColumn>\n              )\n            },\n          },\n          {\n            title: '标签',\n            key: 'tags',\n            width: 100,\n            ellipsis: true,\n            render(row) {\n              return row.tags?.join('，')\n            },\n          },\n          {\n            title: () => (\n              <Icon>\n                <Book />\n              </Icon>\n            ),\n            key: 'count.read',\n            width: 50,\n            render(row) {\n              return row.count?.read || 0\n            },\n          },\n          {\n            title: () => (\n              <Icon>\n                <ThumbsUp />\n              </Icon>\n            ),\n            width: 50,\n            key: 'count.like',\n            render(row) {\n              return row.count?.like || 0\n            },\n          },\n          {\n            title: '创建于',\n            width: 100,\n            key: 'created',\n            sortOrder: 'descend',\n            sorter: 'default',\n            render(row) {\n              return <RelativeTime time={row.created} />\n            },\n          },\n          {\n            title: '修改于',\n            key: 'modified',\n            sorter: 'default',\n            sortOrder: false,\n            width: 100,\n            render(row) {\n              return <RelativeTime time={row.modified} />\n            },\n          },\n          {\n            title: '操作',\n            fixed: 'right',\n            width: 60,\n            key: 'id',\n            render(row) {\n              return (\n                <NSpace>\n                  <NPopconfirm\n                    positiveText={'取消'}\n                    negativeText=\"删除\"\n                    onNegativeClick={async () => {\n                      await RESTManager.api.posts(row.id).delete()\n                      message.success('删除成功')\n                      await fetchData(pager.value.currentPage)\n                    }}\n                  >\n                    {{\n                      trigger: () => (\n                        <NButton text type=\"error\" size=\"tiny\">\n                          移除\n                        </NButton>\n                      ),\n\n                      default: () => (\n                        <span style={{ maxWidth: '12rem' }}>\n                          确定要删除 {row.title} ?\n                        </span>\n                      ),\n                    }}\n                  </NPopconfirm>\n                </NSpace>\n              )\n            },\n          },\n        ])\n\n        return () => (\n          <Table\n            loading={loading.value}\n            columns={columns}\n            data={data}\n            nTableProps={{\n              onUpdateFilters: async (\n                filterState: FilterState,\n                sourceColumn?: TableBaseColumn,\n              ) => {\n                if (!filterState) {\n                  return\n                }\n\n                if (\n                  filterState.category &&\n                  Array.isArray(filterState.category)\n                ) {\n                  const len = filterState.category.length\n                  if (!len) {\n                    await fetchData()\n                    return\n                  }\n                  const ids = filterState.category.join(',')\n\n                  let { data: _data } = (await RESTManager.api.categories.get({\n                    params: {\n                      ids,\n                    },\n                  })) as any\n                  _data = _data\n                    .map((c) => {\n                      return c.category.children.map((ch) => ({\n                        ...omit(c.category, ['children', 'id', 'id']),\n                        ...ch,\n                        categoryId: c.category.id,\n                      }))\n                    })\n                    .sort(\n                      (a, b) => new Date(a).getTime() - new Date(b).getTime(),\n                    )\n                    .flat()\n\n                  data.value = _data\n                  pager.value = {\n                    currentPage: 1,\n                    total: 1,\n                    size: 0,\n                    hasNextPage: false,\n                    hasPrevPage: false,\n                    totalPage: 1,\n                  }\n                }\n              },\n            }}\n            onFetchData={fetchData}\n            pager={pager}\n            onUpdateCheckedRowKeys={(keys) => {\n              checkedRowKeys.value = keys\n            }}\n            onUpdateSorter={async (props) => {\n              sortProps.sortBy = props.sortBy\n              sortProps.sortOrder = props.sortOrder\n            }}\n          ></Table>\n        )\n      },\n    })\n\n    return () => {\n      return (\n        <ContentLayout>\n          {{\n            actions: () => (\n              <>\n                <HeaderActionButton\n                  variant=\"error\"\n                  disabled={checkedRowKeys.value.length == 0}\n                  onClick={() => {\n                    dialog.warning({\n                      title: '警告',\n                      content: '你确定要删除？',\n                      positiveText: '确定',\n                      negativeText: '不确定',\n                      onPositiveClick: async () => {\n                        for (const id of checkedRowKeys.value) {\n                          await RESTManager.api.posts(id as string).delete()\n                        }\n                        checkedRowKeys.value.length = 0\n                        message.success('删除成功')\n\n                        await fetchData()\n                      },\n                    })\n                  }}\n                  icon={<Delete16Regular />}\n                />\n                <HeaderActionButton to={'/posts/edit'} icon={<Add12Filled />} />\n              </>\n            ),\n            default: () => <DataTable />,\n          }}\n        </ContentLayout>\n      )\n    }\n  },\n})\n"],"names":["_hoisted_1","xmlns","viewBox","_hoisted_2","d","fill","defineComponent","name","render","_ctx","_cache","_openBlock","_createBlock","ManagePostListView","setup","loading","checkedRowKeys","data","pager","sortProps","fetchDataFn","useTable","data2","pager2","async","page","route","query","size","response","RESTManager","api","posts","get","params","select","sortBy","sortOrder","value","pagination","message","useMessage","dialog","useDialog","useRoute","fetchData","n","categoryStore","useInjector","CategoryStore","fetch","DataTable","categoryFilterOptions","computed","map","i","label","id","columns","reactive","type","options","title","sorter","key","width","ellipsis","row","RouterLink","to","filterOptions","filter","EditColumn","returnToConfrim","initialValue","categoryId","onSubmit","v","patch","success","find","tags","join","Icon","Book","count","read","ThumbsUp","like","RelativeTime","time","created","modified","fixed","NSpace","NPopconfirm","positiveText","negativeText","onNegativeClick","delete","currentPage","trigger","NButton","text","default","style","maxWidth","Table","nTableProps","onUpdateFilters","filterState","sourceColumn","category","Array","isArray","length","ids","_data","categories","c","children","ch","omit","sort","a","b","Date","getTime","flat","total","hasNextPage","hasPrevPage","totalPage","onFetchData","onUpdateCheckedRowKeys","keys","onUpdateSorter","props","ContentLayout","actions","HeaderActionButton","variant","disabled","onClick","warning","content","onPositiveClick","icon","Delete16Regular","Add12Filled"],"mappings":"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"}